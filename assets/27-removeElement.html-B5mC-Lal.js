import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,o as i,a,b as s,e}from"./app-D8fzSAfk.js";const t={},r=a(`<h2 id="题目地址-27-移除元素-力扣-leetcode" tabindex="-1"><a class="header-anchor" href="#题目地址-27-移除元素-力扣-leetcode"><span>题目地址(27. 移除元素 - 力扣（LeetCode）)</span></a></h2><p><a href="https://leetcode.cn/problems/remove-element/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/remove-element/</a></p><h2 id="题目描述" tabindex="-1"><a class="header-anchor" href="#题目描述"><span>题目描述</span></a></h2><p> 给你一个数组 <code> nums </code> <em>  </em> 和一个值 <code> val </code>，你需要 <strong><a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95" target="_blank"> 原地 </a></strong> 移除所有数值等于  <code> val </code> <em>  </em> 的元素。元素的顺序可能发生改变。然后返回  <code> nums </code>  中与  <code> val </code>  不同的元素的数量。</p><p> 假设 <code> nums </code> 中不等于 <code> val </code> 的元素数量为 <code> k </code>，要通过此题，您需要执行以下操作：</p><ul><li> 更改 <code> nums </code> 数组，使 <code> nums </code> 的前 <code> k </code> 个元素包含不等于 <code> val </code> 的元素。<code> nums </code> 的其余元素和 <code> nums </code> 的大小并不重要。</li><li> 返回 <code> k </code>。</li></ul><p><strong> 用户评测：</strong></p><p> 评测机将使用以下代码测试您的解决方案：</p><pre>int [] nums = [...]; // 输入数组
int val = ...; // 要移除的值
int [] expectedNums = [...]; // 长度正确的预期答案。
                            // 它以不等于 val 的值排序。


int k = removeElement(nums, val); // 调用你的实现

assert k == expectedNums.length;
sort(nums, 0, k); // 排序 nums 的前 k 个元素
for (int i = 0; i &lt; actualLength; i++) {
    assert nums [i] == expectedNums [i];
}</pre><p> 如果所有的断言都通过，你的解决方案将会 <strong> 通过 </strong>。</p><p>  </p><p><strong> 示例 1：</strong></p><pre><strong> 输入：</strong> nums = [3,2,2,3], val = 3
<strong> 输出：</strong> 2, nums = [2,2, _,_]
<strong> 解释：</strong> 你的函数函数应该返回 k = 2, 并且 nums <em> </em> 中的前两个元素均为 2。
你在返回的 k 个元素之外留下了什么并不重要（因此它们并不计入评测）。</pre><p><strong> 示例 2：</strong></p><pre><strong> 输入：</strong> nums = [0,1,2,2,3,0,4,2], val = 2
<strong> 输出：</strong> 5, nums = [0,1,4,0,3, _,_,_]
<strong> 解释：</strong> 你的函数应该返回 k = 5，并且 nums 中的前五个元素为 0,0,1,3,4。
注意这五个元素可以任意顺序返回。
你在返回的 k 个元素之外留下了什么并不重要（因此它们并不计入评测）。
</pre><p>  </p><p><strong> 提示：</strong></p><ul><li><code> 0 &lt;= nums.length &lt;= 100 </code></li><li><code> 0 &lt;= nums [i] &lt;= 50 </code></li><li><code> 0 &lt;= val &lt;= 100 </code></li></ul><h2 id="前置知识" tabindex="-1"><a class="header-anchor" href="#前置知识"><span>前置知识</span></a></h2><ul><li>数组</li></ul><h2 id="思路-1" tabindex="-1"><a class="header-anchor" href="#思路-1"><span>思路 1</span></a></h2><p>题意：</p>`,22),p=s("ol",null,[s("li",null,[e("原地-》空间复杂度为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])])]),s("li",null,"前 K 个元素不等于 val")],-1),o=s("ul",null,[s("li",null,[e("遍历数组 "),s("code",null,"nums"),e("，每次取出的数字变量为 "),s("code",null,"num"),e("，同时设置一个下标 "),s("code",null,"ans")]),s("li",null,[e("在遍历过程中如果出现数字与需要移除的值 "),s("strong",null,"不相同"),e(" 时，则进行拷贝覆盖 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"s"),s("mo",{stretchy:"false"},"["),s("mi",null,"a"),s("mi",null,"n"),s("mi",null,"s"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m")]),s("annotation",{encoding:"application/x-tex"},"nums[ans] = num")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"an"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"m")])])]),e("，"),s("code",null,"ans"),e(" 自增 1")]),s("li",null,[e("如果相同的时候，则跳过该数字不进行拷贝覆盖，最后 "),s("code",null,"ans"),e(" 即为新的数组长度")])],-1),h=a(`<h2 id="关键点" tabindex="-1"><a class="header-anchor" href="#关键点"><span>关键点</span></a></h2><ul><li>拷贝覆盖</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码"><span>代码</span></a></h2><ul><li>语言支持：Java</li></ul><p>Java Code:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> Solution</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> removeElement</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">nums</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> val</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> ans</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> num</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> nums) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (num </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">!=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> val) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">                nums[ans] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> num;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">                ans</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ans;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>复杂度分析</strong></p><p>令 n 为数组长度。</p>`,8),m=s("ul",null,[s("li",null,[e("时间复杂度："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])]),s("li",null,[e("空间复杂度："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])])])],-1),c=[r,p,o,h,m];function d(k,u){return i(),l("div",null,c)}const y=n(t,[["render",d],["__file","27-removeElement.html.vue"]]),B=JSON.parse('{"path":"/leetcode/27-removeElement.html","title":"27-移除元素","lang":"zh-CN","frontmatter":{"title":"27-移除元素","date":"2024-06-22T00:00:00.000Z","tag":["数组"],"category":"LeetCode","description":"题目地址(27. 移除元素 - 力扣（LeetCode）) https://leetcode.cn/problems/remove-element/ 题目描述 给你一个数组 nums 和一个值 val ，你需要 原地 移除所有数值等于 val 的元素。元素的顺序可能发生改变。然后返回 nums 中与 val 不同的元素的数量。 假设 nums 中不等于...","head":[["meta",{"property":"og:url","content":"https://doublew2w.cn/leetcode/27-removeElement.html"}],["meta",{"property":"og:site_name","content":"DoubleW2w"}],["meta",{"property":"og:title","content":"27-移除元素"}],["meta",{"property":"og:description","content":"题目地址(27. 移除元素 - 力扣（LeetCode）) https://leetcode.cn/problems/remove-element/ 题目描述 给你一个数组 nums 和一个值 val ，你需要 原地 移除所有数值等于 val 的元素。元素的顺序可能发生改变。然后返回 nums 中与 val 不同的元素的数量。 假设 nums 中不等于..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-28T16:54:07.000Z"}],["meta",{"property":"article:author","content":"Doublew2w"}],["meta",{"property":"article:tag","content":"数组"}],["meta",{"property":"article:published_time","content":"2024-06-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-28T16:54:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"27-移除元素\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-06-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-28T16:54:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Doublew2w\\",\\"url\\":\\"https://doublew2w.cn\\"}]}"]]},"headers":[{"level":2,"title":"题目地址(27. 移除元素 - 力扣（LeetCode）)","slug":"题目地址-27-移除元素-力扣-leetcode","link":"#题目地址-27-移除元素-力扣-leetcode","children":[]},{"level":2,"title":"题目描述","slug":"题目描述","link":"#题目描述","children":[]},{"level":2,"title":"前置知识","slug":"前置知识","link":"#前置知识","children":[]},{"level":2,"title":"思路 1","slug":"思路-1","link":"#思路-1","children":[]},{"level":2,"title":"关键点","slug":"关键点","link":"#关键点","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]}],"git":{"createdTime":1722185647000,"updatedTime":1722185647000,"contributors":[{"name":"DoubleW2w","email":"1049951363@qq.com","commits":1}]},"readingTime":{"minutes":2.69,"words":807},"filePathRelative":"leetcode/27-removeElement.md","localizedDate":"2024年6月22日","excerpt":"<h2>题目地址(27. 移除元素 - 力扣（LeetCode）)</h2>\\n<p><a href=\\"https://leetcode.cn/problems/remove-element/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://leetcode.cn/problems/remove-element/</a></p>","autoDesc":true}');export{y as comp,B as data};
