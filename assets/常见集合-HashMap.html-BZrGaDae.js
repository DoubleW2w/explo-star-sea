import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as h,o as n,a,b as s,e as i}from"./app-D8fzSAfk.js";const t={},k=a(`<h2 id="了解-hashmap" tabindex="-1"><a class="header-anchor" href="#了解-hashmap"><span>了解 HashMap</span></a></h2><p>哈希表的存在是为了解决能通过 O(1)时间复杂度直接索引到指定元素。</p><p>一个哈希表（hash table、hash map）是一种实现关联数组的抽象数据结构，该结构将键通过哈希计算映射到值。</p><ul><li>键 -&gt; 哈希计算 -&gt; 位置</li><li>位置 -&gt; 值</li></ul><blockquote><p>HashMap 的实现原理</p></blockquote><blockquote><p>HashMap 的 jdk1.7 和 jdk1.8 有什么区别</p></blockquote><h2 id="hashcode-为什么使用-31-作为乘数" tabindex="-1"><a class="header-anchor" href="#hashcode-为什么使用-31-作为乘数"><span>HashCode 为什么使用 31 作为乘数？</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> hashCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> h </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> hash</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> (h </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> &gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        char</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> val[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">            h </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 31</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> h </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> val[i]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">        hash </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> h</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> h</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),e=s("p",null,[i("循环公式为："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"s"),s("mo",{stretchy:"false"},"["),s("mn",null,"0"),s("mo",{stretchy:"false"},"]"),s("mo",null,"∗"),s("mn",null,"3"),s("msup",null,[s("mn",null,"1"),s("mrow",null,[s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")")])]),s("mo",null,"+"),s("mi",null,"s"),s("mo",{stretchy:"false"},"["),s("mn",null,"1"),s("mo",{stretchy:"false"},"]"),s("mo",null,"∗"),s("mn",null,"3"),s("msup",null,[s("mn",null,"1"),s("mrow",null,[s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"2"),s("mo",{stretchy:"false"},")")])]),s("mo",null,"+"),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",null,"+"),s("mi",null,"s"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"s[0]*31^{(n-1)} + s[1]*31^{(n-2)} + ... + s[n-1]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"0"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9713em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mord"},[s("span",{class:"mord"},"1"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.888em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1"),s("span",{class:"mclose mtight"},")")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9713em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mord"},[s("span",{class:"mord"},"1"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.888em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"2"),s("span",{class:"mclose mtight"},")")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},"]")])])])],-1),p=s("ol",null,[s("li",null,[s("p",null,"31 是一个奇质数(不能被2整除的最小素数），如果选择偶数会导致乘积运算时数据溢出。")]),s("li",null,[s("p",null,[i("在二进制中，"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"5")])]),s("annotation",{encoding:"application/x-tex"},"2^5")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"5")])])])])])])])])])]),i("是32，那么 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"31"),s("mo",null,"∗"),s("mi",null,"i"),s("mo",null,"="),s("mo",null,"="),s("mo",{stretchy:"false"},"("),s("mi",null,"i"),s("mo",null,"<"),s("mo",null,"<"),s("mn",null,"5"),s("mo",{stretchy:"false"},")"),s("mo",null,"−"),s("mi",null,"i")]),s("annotation",{encoding:"application/x-tex"},"31 * i == (i << 5) - i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"31"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6595em"}}),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"=="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"<<"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"5"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6595em"}}),s("span",{class:"mord mathnormal"},"i")])])]),i("，乘积运算可以使用位移提升性能。")])]),s("li",null,[s("p",null,"可以通过实践。"),s("ol",null,[s("li",null,"准备一个单词表，定义一个不同参数的 hashcode 函数")]),s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--shiki-light":"#24292e","--shiki-dark":"#abb2bf","--shiki-light-bg":"#fff","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes github-light one-dark-pro vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}}," static"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}}," Integer"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}}," hashCode"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"("),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}},"String"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," str"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},","),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}}," Integer"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," multiplier) {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"    int"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," hash "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}}," 0"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"    for"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," ("),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," i "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}}," 0"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},";"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," i "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"<"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}}," str"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"length"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"();"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," i"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#ABB2BF"}},"++"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"        hash "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," multiplier "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"*"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," hash "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"+"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}}," str"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"charAt"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"(i);")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"    return"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," hash"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("ol",{start:"2"},[s("li",null,"定义一个函数，计算所有不同参数下的所有hashcode情况")]),s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--shiki-light":"#24292e","--shiki-dark":"#abb2bf","--shiki-light-bg":"#fff","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes github-light one-dark-pro vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}}," static"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}}," List"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"<"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"RateInfo"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},">"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}}," collisionRateList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"("),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}},"Set"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"<"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"String"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},">"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," strList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},","),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}}," Integer"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"..."),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}}," multipliers"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#7F848E","--shiki-light-font-style":"inherit","--shiki-dark-font-style":"italic"}},"    // 结果存放")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}},"    List"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"<"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#E5C07B"}},"RateInfo"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},">"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," rateInfoList "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"="),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}}," new"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}}," ArrayList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"<>"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"()"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"    for"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," ("),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}},"Integer"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," multiplier "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},":"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," multipliers) {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#7F848E","--shiki-light-font-style":"inherit","--shiki-dark-font-style":"italic"}},"        // 每个循环存在不同的参数")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}},"        List"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"<"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#E5C07B"}},"Integer"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},">"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," hashCodeList "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"="),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}}," new"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}}," ArrayList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"<>"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"()"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"        for"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," ("),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}},"String"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," str "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},":"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," strList) {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}},"            Integer"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," hashCode "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"="),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}}," hashCode"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"(str"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},","),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," multiplier)"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}},"            hashCodeList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"add"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"(hashCode);")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"        }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#7F848E","--shiki-light-font-style":"inherit","--shiki-dark-font-style":"italic"}},"        // 计算当前参数下的hash碰撞概率")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}},"        rateInfoList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"add"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"hashCollisionRate"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"(multiplier, hashCodeList));")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"    return"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," rateInfoList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("ol",{start:"3"},[s("li",null,"定义一个函数计算hash碰撞概率")]),s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--shiki-light":"#24292e","--shiki-dark":"#abb2bf","--shiki-light-bg":"#fff","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes github-light one-dark-pro vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#7F848E","--shiki-light-font-style":"inherit","--shiki-dark-font-style":"italic"}},"/**")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#7F848E","--shiki-light-font-style":"inherit","--shiki-dark-font-style":"italic"}},"* 计算Hash碰撞概率")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#7F848E","--shiki-light-font-style":"inherit","--shiki-dark-font-style":"italic"}},"*/")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"private"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}}," static"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}}," RateInfo"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}}," hashCollisionRate"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"("),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}},"Integer"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," multiplier"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},","),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}}," List"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"<"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"Integer"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},">"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," hashCodeList) {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"    int"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," maxHash "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}}," hashCodeList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"stream"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"()."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"max"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"(Integer"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"::"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"compareTo)."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"get"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"();")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"    int"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," minHash "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}}," hashCodeList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"stream"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"()."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"min"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"(Integer"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"::"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"compareTo)."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"get"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"();")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"    int"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," collisionCount "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," ("),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},") ("),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}},"hashCodeList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"size"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"()"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}}," -"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}}," hashCodeList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"stream"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"()."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"distinct"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"()."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"count"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"()"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},")"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"    double"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," collisionRate "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," (collisionCount "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"*"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}}," 1.0"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},") "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"/"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E5C07B"}}," hashCodeList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"size"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"();")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"    return"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}}," new"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}}," RateInfo"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"(maxHash"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},","),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," minHash"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},","),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," multiplier"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},","),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," collisionCount"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},","),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," collisionRate)"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("ol",{start:"4"},[s("li",null,"计算不同区域的碰撞情况")])])],-1),r=a(`<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Map</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> hashArea</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> hashCodeList) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    Map</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> statistics </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> LinkedHashMap</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> start </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0x80000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0x7fffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 67108864</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> min </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> max </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> min </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 67108864</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">        // 筛选出每个格子里的哈希值数量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">) </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">hashCodeList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">parallelStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(x </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> min </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> max).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        statistics</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(start</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, num);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> statistics</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Map</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> hashArea</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">Set</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> strList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> multiplier){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> hashCodeList </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> ArrayList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> str </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> strList) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> hashCode </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> hashCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(str</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> multiplier)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        hashCodeList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(hashCode);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> hashArea</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(hashCodeList)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hashmap" tabindex="-1"><a class="header-anchor" href="#hashmap"><span>HashMap</span></a></h2><p>扰动函数</p><p>初始化容量</p><p>负载因子</p><p>扩容方法</p><p>链表和红黑树</p><h3 id="扰动函数" tabindex="-1"><a class="header-anchor" href="#扰动函数"><span>扰动函数</span></a></h3><p><strong>使用扰动函数的目的是：让数据分配更加均匀</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> key) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> h</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> (key </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> (h </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">hashCode</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">^</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> (h </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 16</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>异或运算:</strong></p><ul><li>当两个比较的位相同的时候，结果为 0。</li><li>当两个比较的位不相同的时候，结果为 1。</li></ul><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>0 XOR 0 = 0</span></span>
<span class="line"><span>0 XOR 1 = 1</span></span>
<span class="line"><span>1 XOR 0 = 1</span></span>
<span class="line"><span>1 XOR 1 = 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以上面的代码是</p><ul><li>计算哈希值 <code>key.hashCode()</code> 第一个值</li><li>右移16位，在左边进行填充0 第二个值</li><li>第一个值和第二个值进行异或运算——<strong>混合了原哈希值中的高位和低位，加大随机性</strong></li></ul><h3 id="初始化容量" tabindex="-1"><a class="header-anchor" href="#初始化容量"><span>初始化容量</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> HashMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> initialCapacity</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> loadFactor) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    //.. 省略</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">loadFactor</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> loadFactor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">threshold</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> tableSizeFor</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(initialCapacity)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>threshold</code> 通过 <code>tableSizeFor()</code> 函数进行调整。目的就是找出<strong>比初始值大，最小的2进制数值</strong>。</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> tableSizeFor</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> cap) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> cap </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    n </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    n </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    n </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    n </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 8</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    n </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 16</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    // MAXIMUM_CAPACITY = 1 &lt;&lt; 30</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> (n </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> (n </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> MAXIMUM_CAPACITY) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> MAXIMUM_CAPACITY </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="负载因子" tabindex="-1"><a class="header-anchor" href="#负载因子"><span>负载因子</span></a></h3><p>负载因子决定了数据量多少了以后进行扩容。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> DEFAULT_LOAD_FACTOR </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0.75f</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>默认值 0.75 就是说当阀值容量占了3/4 时赶紧扩容，减少 Hash 碰撞。</p><h3 id="扩容" tabindex="-1"><a class="header-anchor" href="#扩容"><span>扩容</span></a></h3>`,24),d=[k,e,p,r];function g(y,c){return n(),h("div",null,d)}const C=l(t,[["render",g],["__file","常见集合-HashMap.html.vue"]]),B=JSON.parse('{"path":"/leetcode/%E5%B8%B8%E8%A7%81%E9%9B%86%E5%90%88-HashMap.html","title":"常见集合-HashMap","lang":"zh-CN","frontmatter":{"title":"常见集合-HashMap","date":"2024-07-15T00:00:00.000Z","category":"Collection","tag":["Java","HashMap"],"description":"了解 HashMap 哈希表的存在是为了解决能通过 O(1)时间复杂度直接索引到指定元素。 一个哈希表（hash table、hash map）是一种实现关联数组的抽象数据结构，该结构将键通过哈希计算映射到值。 键 -> 哈希计算 -> 位置 位置 -> 值 HashMap 的实现原理 HashMap 的 jdk1.7 和 jdk1.8 有什么区别 H...","head":[["meta",{"property":"og:url","content":"https://doublew2w.cn/leetcode/%E5%B8%B8%E8%A7%81%E9%9B%86%E5%90%88-HashMap.html"}],["meta",{"property":"og:site_name","content":"DoubleW2w"}],["meta",{"property":"og:title","content":"常见集合-HashMap"}],["meta",{"property":"og:description","content":"了解 HashMap 哈希表的存在是为了解决能通过 O(1)时间复杂度直接索引到指定元素。 一个哈希表（hash table、hash map）是一种实现关联数组的抽象数据结构，该结构将键通过哈希计算映射到值。 键 -> 哈希计算 -> 位置 位置 -> 值 HashMap 的实现原理 HashMap 的 jdk1.7 和 jdk1.8 有什么区别 H..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-28T16:54:07.000Z"}],["meta",{"property":"article:author","content":"Doublew2w"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"HashMap"}],["meta",{"property":"article:published_time","content":"2024-07-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-28T16:54:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常见集合-HashMap\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-15T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-28T16:54:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Doublew2w\\",\\"url\\":\\"https://doublew2w.cn\\"}]}"]]},"headers":[{"level":2,"title":"了解 HashMap","slug":"了解-hashmap","link":"#了解-hashmap","children":[]},{"level":2,"title":"HashCode 为什么使用 31 作为乘数？","slug":"hashcode-为什么使用-31-作为乘数","link":"#hashcode-为什么使用-31-作为乘数","children":[]},{"level":2,"title":"HashMap","slug":"hashmap","link":"#hashmap","children":[{"level":3,"title":"扰动函数","slug":"扰动函数","link":"#扰动函数","children":[]},{"level":3,"title":"初始化容量","slug":"初始化容量","link":"#初始化容量","children":[]},{"level":3,"title":"负载因子","slug":"负载因子","link":"#负载因子","children":[]},{"level":3,"title":"扩容","slug":"扩容","link":"#扩容","children":[]}]}],"git":{"createdTime":1722185647000,"updatedTime":1722185647000,"contributors":[{"name":"DoubleW2w","email":"1049951363@qq.com","commits":1}]},"readingTime":{"minutes":2.99,"words":896},"filePathRelative":"leetcode/常见集合-HashMap.md","localizedDate":"2024年7月15日","excerpt":"<h2>了解 HashMap</h2>\\n<p>哈希表的存在是为了解决能通过 O(1)时间复杂度直接索引到指定元素。</p>\\n<p>一个哈希表（hash table、hash map）是一种实现关联数组的抽象数据结构，该结构将键通过哈希计算映射到值。</p>\\n<ul>\\n<li>键 -&gt; 哈希计算 -&gt; 位置</li>\\n<li>位置 -&gt; 值</li>\\n</ul>","autoDesc":true}');export{C as comp,B as data};
