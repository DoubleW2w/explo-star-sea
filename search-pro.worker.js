const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":90,\"nextId\":90,\"documentIds\":{\"0\":\"0\",\"1\":\"2\",\"2\":\"2#介绍\",\"3\":\"3\",\"4\":\"3#关于我\",\"5\":\"4\",\"6\":\"5\",\"7\":\"5@0\",\"8\":\"6\",\"9\":\"6@0\",\"10\":\"6@1\",\"11\":\"7\",\"12\":\"7@0\",\"13\":\"7@1\",\"14\":\"8\",\"15\":\"8#markdown-介绍\",\"16\":\"8#markdown-配置\",\"17\":\"8#markdown-扩展\",\"18\":\"8#vuepress-扩展\",\"19\":\"8#主题扩展\",\"20\":\"8#选项卡\",\"21\":\"8#脚注\",\"22\":\"8#导入文件\",\"23\":\"8#tex-语法\",\"24\":\"8#任务列表\",\"25\":\"8#图片增强\",\"26\":\"8#上下角标\",\"27\":\"8#组件\",\"28\":\"8@0\",\"29\":\"8@1\",\"30\":\"9\",\"31\":\"9#页面标题\",\"32\":\"9#页面信息\",\"33\":\"9#页面内容\",\"34\":\"9#组件\",\"35\":\"9@0\",\"36\":\"9@1\",\"37\":\"10\",\"38\":\"10#题目地址-209-长度最小的子数组-力扣-leetcode\",\"39\":\"10#题目描述\",\"40\":\"10#前置知识\",\"41\":\"10#思路1-滑动窗口\",\"42\":\"10#关键点\",\"43\":\"10#代码\",\"44\":\"11\",\"45\":\"11#题目地址-27-移除元素-力扣-leetcode\",\"46\":\"11#题目描述\",\"47\":\"11#前置知识\",\"48\":\"11#思路-1\",\"49\":\"11#关键点\",\"50\":\"11#代码\",\"51\":\"11@1\",\"52\":\"12\",\"53\":\"12#题目地址-59-螺旋矩阵-ii-力扣-leetcode\",\"54\":\"12#题目描述\",\"55\":\"12#前置知识\",\"56\":\"12#思路\",\"57\":\"12#关键点\",\"58\":\"12#代码\",\"59\":\"13\",\"60\":\"13#题目地址-704-二分查找-力扣-leetcode\",\"61\":\"13#题目描述\",\"62\":\"13#前置知识\",\"63\":\"13#思路\",\"64\":\"13#关键点\",\"65\":\"13#代码\",\"66\":\"13#思路改进\",\"67\":\"13#左闭右必区间\",\"68\":\"13@1\",\"69\":\"14\",\"70\":\"14#题目地址-977-有序数组的平方-力扣-leetcode\",\"71\":\"14#题目描述\",\"72\":\"14#前置知识\",\"73\":\"14#思路\",\"74\":\"14#关键点\",\"75\":\"14#代码\",\"76\":\"14@1\",\"77\":\"15\",\"78\":\"16\",\"79\":\"16#什么是数组\",\"80\":\"16#数组的特点\",\"81\":\"16#二分法\",\"82\":\"16#二分查找模板-1\",\"83\":\"16#二分查找模版-2-找满足条件的最左侧的值\",\"84\":\"16#二分查找模版-3-找满足条件的最右侧的值\",\"85\":\"16#双指针法\",\"86\":\"16#滑动窗口\",\"87\":\"16#模拟行为\",\"88\":\"17\",\"89\":\"18\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,3],\"1\":[1],\"2\":[1,6],\"3\":[1],\"4\":[1],\"5\":[1,88],\"6\":[1],\"7\":[null,null,1],\"8\":[1,18],\"9\":[null,null,1],\"10\":[null,null,1],\"11\":[1,20],\"12\":[null,null,1],\"13\":[null,null,1],\"14\":[2,10],\"15\":[2,8],\"16\":[2,12],\"17\":[2,11],\"18\":[2,10],\"19\":[1,10],\"20\":[1,1],\"21\":[1,3],\"22\":[1,1],\"23\":[2,10],\"24\":[1,5],\"25\":[1,2],\"26\":[1,3],\"27\":[1],\"28\":[null,null,1],\"29\":[null,null,1],\"30\":[1,3],\"31\":[1,19],\"32\":[1,20],\"33\":[1,12],\"34\":[1,13],\"35\":[null,null,1],\"36\":[null,null,2],\"37\":[2],\"38\":[6,9],\"39\":[1,39],\"40\":[1,3],\"41\":[2,15],\"42\":[1,5],\"43\":[1,50],\"44\":[2],\"45\":[6,7],\"46\":[1,76],\"47\":[1,1],\"48\":[2,25],\"49\":[1,1],\"50\":[1,27],\"51\":[null,null,1],\"52\":[3],\"53\":[7,8],\"54\":[1,26],\"55\":[1,2],\"56\":[1,32],\"57\":[1,2],\"58\":[1,67],\"59\":[2],\"60\":[6,7],\"61\":[1,38],\"62\":[1,1],\"63\":[1,45],\"64\":[1,2],\"65\":[1,34],\"66\":[1,35],\"67\":[1,23],\"68\":[null,null,2],\"69\":[2],\"70\":[6,11],\"71\":[1,42],\"72\":[1,1],\"73\":[1,7],\"74\":[1,6],\"75\":[1,50],\"76\":[null,null,2],\"77\":[1,1],\"78\":[1],\"79\":[2,6],\"80\":[1,10],\"81\":[1],\"82\":[2,61],\"83\":[3,72],\"84\":[3,42],\"85\":[1,7],\"86\":[1,12],\"87\":[1,6],\"88\":[1,3],\"89\":[1]},\"averageFieldLength\":[1.53633720257969,17.32453074195977,0.5362263702184651],\"storedFields\":{\"0\":{\"h\":\"主页\",\"t\":[\"配置项的相关说明详见 项目主页配置。\"]},\"1\":{\"h\":\"档案主页\"},\"2\":{\"h\":\"介绍\",\"t\":[\"This is Me!\",\"相关配置文档请见 档案主页。\"]},\"3\":{\"h\":\"关于我\"},\"4\":{\"h\":\"关于我\"},\"5\":{\"h\":\"关于本站\",\"t\":[\"2024-06-17\",\"完善 deploy,yml，部署到SSH 域名解析 doublew2w.cn\",\"2024-06-16\",\"完善 deploy.yml 文件，部署到 github-page\",\"注意\",\"记得建立 gh-pages 分支\",\"name: 部署文档 on: push: branches: - master permissions: contents: write jobs: deploy-gh-pages: runs-on: ubuntu-latest environment: master steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 1 # 如果你文档需要 Git 子模块，取消注释下一行 # submodules: true - name: 设置 pnpm uses: pnpm/action-setup@v4 - name: 设置 Node.js uses: actions/setup-node@v4 with: node-version: 20 cache: \\\"pnpm\\\" - name: 安装依赖 run: | corepack enable pnpm install --frozen-lockfile - name: 构建文档 env: NODE_OPTIONS: --max_old_space_size=8192 run: |- pnpm run docs:build > src/.vuepress/dist/.nojekyll - name: 部署文档 uses: JamesIves/github-pages-deploy-action@v4 with: # 部署文档 branch: gh-pages folder: src/.vuepress/dist\",\"2024-06-15\",\"初始化项目并上传到github\"]},\"6\":{\"h\":\"主要功能与配置演示\"},\"7\":{\"c\":[\"使用指南\"]},\"8\":{\"h\":\"布局与功能禁用\",\"t\":[\"你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。\",\"本页面就是一个示例，禁用了如下功能:\",\"导航栏\",\"侧边栏\",\"路径导航\",\"页面信息\",\"贡献者\",\"编辑此页链接\",\"更新时间\",\"上一篇/下一篇 链接\",\"评论\",\"页脚\",\"返回顶部按钮\"]},\"9\":{\"c\":[\"使用指南\"]},\"10\":{\"c\":[\"禁用\"]},\"11\":{\"h\":\"布局\",\"t\":[\"布局包括:\",\"导航栏\",\"侧边栏\",\"页脚\",\"同时每个页面包含:\",\"路径导航\",\"标题和页面信息\",\"TOC (文章标题列表)\",\"贡献者、更新时间等页面元信息\",\"评论\",\"主题也带有以下元素:\",\"夜间模式按钮\",\"返回顶部按钮\",\"打印按钮\",\"你可以在主题选项和页面的 frontmatter 中自定义它们。\"]},\"12\":{\"c\":[\"指南\"]},\"13\":{\"c\":[\"布局\"]},\"14\":{\"h\":\"Markdown 展示\",\"t\":[\"VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。\",\"你需要创建并编写 Markdown，以便 VuePress 可以根据文件结构将它们转换为不同的页面。\"]},\"15\":{\"h\":\"Markdown 介绍\",\"t\":[\"如果你是一个新手，还不会编写 Markdown，请先阅读 Markdown 介绍 和 Markdown 演示。\"]},\"16\":{\"h\":\"Markdown 配置\",\"t\":[\"VuePress 通过 Frontmatter 为每个 Markdown 页面引入配置。\",\"Frontmatter\",\"Frontmatter 是 VuePress 中很重要的一个概念，请阅读 Frontmatter 介绍 了解详情。\"]},\"17\":{\"h\":\"Markdown 扩展\",\"t\":[\"VuePress 会使用 markdown-it 来解析 Markdown 内容，因此可以借助于 markdown-it 插件来实现 语法扩展 。\"]},\"18\":{\"h\":\"VuePress 扩展\",\"t\":[\"为了丰富文档写作，VuePress 对 Markdown 语法进行了扩展。\",\"关于这些扩展，请阅读 VuePress 中的 Markdown 扩展。\"]},\"19\":{\"h\":\"主题扩展\",\"t\":[\"通过 vuepress-plugin-md-enhance，主题扩展了更多 Markdown 语法，提供更加丰富的写作功能。\"]},\"20\":{\"h\":\"选项卡\",\"t\":[\"查看详情\"]},\"21\":{\"h\":\"脚注\",\"t\":[\"此文字有脚注[1].\",\"查看详情\"]},\"22\":{\"h\":\"导入文件\",\"t\":[\"查看详情\"]},\"23\":{\"h\":\"TeX 语法\",\"t\":[\"∂ωr∂r​(ωyω​)=(ωyω​){(logy)r+i=1∑r​ωi(−1)ir⋯(r−i+1)(logy)r−i​}\",\"查看详情\"]},\"24\":{\"h\":\"任务列表\",\"t\":[\" 计划 1\",\" 计划 2\",\"查看详情\"]},\"25\":{\"h\":\"图片增强\",\"t\":[\"支持为图片设置颜色模式和大小。\",\"查看详情\"]},\"26\":{\"h\":\"上下角标\",\"t\":[\"19th H2O\",\"查看详情\"]},\"27\":{\"h\":\"组件\"},\"28\":{\"c\":[\"使用指南\"]},\"29\":{\"c\":[\"Markdown\"]},\"30\":{\"h\":\"页面配置\",\"t\":[\"more 注释之前的内容被视为文章摘要。\"]},\"31\":{\"h\":\"页面标题\",\"t\":[\"The first H1 title in Markdown will be regarded as page title.\",\"Markdown 中的第一个 H1 标题会被视为页面标题。\",\"你可以在 Markdown 的 Frontmatter 中设置页面标题。\",\"--- title: 页面标题 ---\"]},\"32\":{\"h\":\"页面信息\",\"t\":[\"你可以在 Markdown 的 Frontmatter 中设置页面信息。\",\"作者设置为 Ms.Hope。\",\"写作日期为 2020 年 1 月 1 日\",\"分类为 “使用指南”\",\"标签为 “页面配置” 和 “使用指南”\"]},\"33\":{\"h\":\"页面内容\",\"t\":[\"你可以自由在这里书写你的 Markdown。\",\"图片引入\",\"你可以将图片和 Markdown 文件放置在一起使用相对路径进行引用。\",\"对于 .vuepress/public 文件夹的图片，请使用绝对链接 / 进行引用。\"]},\"34\":{\"h\":\"组件\",\"t\":[\"每个 Markdown 页面都会被转换为一个 Vue 组件，这意味着你可以在 Markdown 中使用 Vue 语法：\",\"{{ 1 + 1 }}\",\"{{ i }}\",\"你也可以创建并引入你自己的组件。\"]},\"35\":{\"c\":[\"使用指南\"]},\"36\":{\"c\":[\"页面配置\",\"使用指南\"]},\"37\":{\"h\":\"209-长度最小的子数组\"},\"38\":{\"h\":\"题目地址(209. 长度最小的子数组 - 力扣（LeetCode）)\",\"t\":[\"https://leetcode.cn/problems/minimum-size-subarray-sum/\"]},\"39\":{\"h\":\"题目描述\",\"t\":[\"给定一个含有 n个正整数的数组和一个正整数 target 。\",\"找出该数组中满足其总和大于等于target的长度最小的 \",\"子数组\",\"[numsl, numsl+1, ..., numsr-1, numsr] ，并返回其长度。如果不存在符合条件的子数组，返回 0 。\",\"示例 1：\",\"输入：target = 7, nums = [2,3,1,2,4,3] 输出：2 解释：子数组 [4,3] 是该条件下的长度最小的子数组。 \",\"示例 2：\",\"输入：target = 4, nums = [1,4,4] 输出：1 \",\"示例 3：\",\"输入：target = 11, nums = [1,1,1,1,1,1,1,1] 输出：0 \",\"提示：\",\"1 <= target <= 109\",\"1 <= nums.length <= 105\",\"1 <= nums[i] <= 105\",\"进阶：\",\"如果你已经实现O(n) 时间复杂度的解法, 请尝试设计一个 O(n log(n)) 时间复杂度的解法。\"]},\"40\":{\"h\":\"前置知识\",\"t\":[\"滑动窗口\",\"[前缀和+二分查找]\"]},\"41\":{\"h\":\"思路1：滑动窗口\",\"t\":[\"定义两个指针 start 和 end 分别指向滑动窗口的开始位置和结束位置\",\"计算滑动窗口的总和 sum\",\"当 sum 符合题目时，窗口的长度为子数组的最小长度 end−start+1\",\"将 start 继续往右移，找到更小的窗口长度\",\"继续更新子数组的最小长度\"]},\"42\":{\"h\":\"关键点\",\"t\":[\"当窗口符合条件时，要将 start 继续往右移，找到更小的窗口长度\"]},\"43\":{\"h\":\"代码\",\"t\":[\"语言支持：Java\",\"Java Code:\",\" class Solution { public int minSubArrayLen(int target, int[] nums) { // 第一次符合条件为窗口长度 right - left // int n = nums.length; if(n == 0) return 0; int ans = Integer.MAX_VALUE; int start = 0, end = 0; // 滑动串口的指针和右指针 int sum = 0; while (end < n) { sum += nums[end]; // 把当前元素添加进去,直到符合最小窗口的长度 while (sum >= target) { // 最小窗口长度右移，直到不满足 此时，ans = end - start + 1， end - start ans = Math.min(ans, end - start + 1); sum -= nums[start]; start++; } end++; } return ans == Integer.MAX_VALUE ? 0 : ans; } }\",\"复杂度分析\",\"令 n 为数组长度。\",\"时间复杂度：O(n)\",\"空间复杂度：O(1)\"]},\"44\":{\"h\":\"27-移除元素\"},\"45\":{\"h\":\"题目地址(27. 移除元素 - 力扣（LeetCode）)\",\"t\":[\"https://leetcode.cn/problems/remove-element/\"]},\"46\":{\"h\":\"题目描述\",\"t\":[\" 给你一个数组 nums 和一个值 val ，你需要 原地 移除所有数值等于 val 的元素。元素的顺序可能发生改变。然后返回 nums 中与 val 不同的元素的数量。\",\" 假设 nums 中不等于 val 的元素数量为 k ，要通过此题，您需要执行以下操作：\",\" 更改 nums 数组，使 nums 的前 k 个元素包含不等于 val 的元素。 nums 的其余元素和 nums 的大小并不重要。\",\" 返回 k 。\",\" 用户评测：\",\" 评测机将使用以下代码测试您的解决方案：\",\"int [] nums = [...]; // 输入数组 int val = ...; // 要移除的值 int [] expectedNums = [...]; // 长度正确的预期答案。 // 它以不等于 val 的值排序。 int k = removeElement(nums, val); // 调用你的实现 assert k == expectedNums.length; sort(nums, 0, k); // 排序 nums 的前 k 个元素 for (int i = 0; i < actualLength; i++) { assert nums [i] == expectedNums [i]; }\",\" 如果所有的断言都通过，你的解决方案将会 通过 。\",\" 示例 1：\",\" 输入： nums = [3,2,2,3], val = 3 输出： 2, nums = [2,2, _,_] 解释： 你的函数函数应该返回 k = 2, 并且 nums 中的前两个元素均为 2。 你在返回的 k 个元素之外留下了什么并不重要（因此它们并不计入评测）。\",\" 示例 2：\",\" 输入： nums = [0,1,2,2,3,0,4,2], val = 2 输出： 5, nums = [0,1,4,0,3, _,_,_] 解释： 你的函数应该返回 k = 5，并且 nums 中的前五个元素为 0,0,1,3,4。 注意这五个元素可以任意顺序返回。 你在返回的 k 个元素之外留下了什么并不重要（因此它们并不计入评测）。 \",\" 提示：\",\" 0 <= nums.length <= 100 \",\" 0 <= nums [i] <= 50 \",\" 0 <= val <= 100 \"]},\"47\":{\"h\":\"前置知识\",\"t\":[\"数组\"]},\"48\":{\"h\":\"思路 1\",\"t\":[\"题意：\",\"原地-》空间复杂度为 O(1)\",\"前 K 个元素不等于 val\",\"遍历数组 nums，每次取出的数字变量为 num，同时设置一个下标 ans\",\"在遍历过程中如果出现数字与需要移除的值 不相同 时，则进行拷贝覆盖 nums[ans]=num，ans 自增 1\",\"如果相同的时候，则跳过该数字不进行拷贝覆盖，最后 ans 即为新的数组长度\"]},\"49\":{\"h\":\"关键点\",\"t\":[\"拷贝覆盖\"]},\"50\":{\"h\":\"代码\",\"t\":[\"语言支持：Java\",\"Java Code:\",\" class Solution { public int removeElement(int[] nums, int val) { int ans = 0; for (int num : nums) { if (num != val) { nums[ans] = num; ans++; } } return ans; } }\",\"复杂度分析\",\"令 n 为数组长度。\",\"时间复杂度：O(n)\",\"空间复杂度：O(1)\"]},\"51\":{\"c\":[\"数组\"]},\"52\":{\"h\":\"59-螺旋矩阵 II\"},\"53\":{\"h\":\"题目地址(59. 螺旋矩阵 II - 力扣（LeetCode）)\",\"t\":[\"https://leetcode.cn/problems/spiral-matrix-ii/\"]},\"54\":{\"h\":\"题目描述\",\"t\":[\" 给你一个正整数 n ，生成一个包含 1 到 n 2 所有元素，且元素按顺时针顺序螺旋排列的 n x n 正方形矩阵 matrix 。\",\" 示例 1：\",\" 输入： n = 3 输出： [[1,2,3], [8,9,4], [7,6,5]] \",\" 示例 2：\",\" 输入： n = 1 输出： [[1]] \",\" 提示：\",\" 1 <= n <= 20 \"]},\"55\":{\"h\":\"前置知识\",\"t\":[\"数组\",\"模拟\"]},\"56\":{\"h\":\"思路\",\"t\":[\"定义好上下左右四个边界 top, bottom, left, right\",\"按照题目进行模拟，从左到右（上边界缩减），从上到下（右边界缩减），从右到左（下边界缩减），从下到上（下边界缩减）\",\"使用 num<=tar 而不是 l<r∣∣t<b 作为迭代条件，是为了解决当 n 为奇数时，矩阵中心数字无法在迭代过程中被填充的问题。 \",\"当 n = 3 时，填充到8时，此时 top==bottom ，就会导致退出循环，中心数字无法在迭代过程中被填充。\"]},\"57\":{\"h\":\"关键点\",\"t\":[\"边界变化条件\",\"循环终止条件\"]},\"58\":{\"h\":\"代码\",\"t\":[\"语言支持：Java\",\"Java Code:\",\" class Solution { public int[][] generateMatrix(int n) { int left = 0, right = n-1, top = 0, bottom = n-1; int count = 1, target = n * n; int[][] res = new int[n][n]; //for循环中变量定义成i或j的细节：按照通常的思维，i代表行，j代表列 //这样，就可以很容易区分出来变化的量应该放在[][]的第一个还是第二个 //对于变量的边界怎么定义： //从左向右填充：填充的列肯定在[left,right]区间 //从上向下填充：填充的行肯定在[top,bottom]区间 //从右向左填充：填充的列肯定在[right,left]区间 //从下向上填充：填充的行肯定在[bootom,top]区间 //通过上面的总结会发现边界的起始和结束与方向是对应的 while(count <= target){ //从左到右填充，相当于缩小上边界 for(int j = left; j <= right; j++) res[top][j] = count++; //缩小上边界 top++; //从上向下填充，相当于缩小右边界 for(int i = top; i <=bottom; i++) res[i][right] = count++; //缩小右边界 right--; //从右向左填充，相当于缩小下边界 for(int j = right; j >= left; j--) res[bottom][j] = count++; //缩小下边界 bottom--; //从下向上填充，相当于缩小左边界 for(int i = bottom; i >= top; i--) res[i][left] = count++; //缩小左边界 left++; } return res; } }\",\"复杂度分析\",\"令 n 为数组长度。\",\"时间复杂度：O(n2)\",\"空间复杂度：O(1)\"]},\"59\":{\"h\":\"704-二分查找\"},\"60\":{\"h\":\"题目地址(704. 二分查找 - 力扣（LeetCode）)\",\"t\":[\"https://leetcode.cn/problems/binary-search/\"]},\"61\":{\"h\":\"题目描述\",\"t\":[\" 给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target ，写一个函数搜索 nums 中的 target ，如果目标值存在返回下标，否则返回 -1 。\",\" 示例 1: \",\" 输入: nums = [-1,0,3,5,9,12], target = 9 输出: 4 解释: 9 出现在 nums 中并且下标为 4 \",\" 示例 2: \",\" 输入: nums = [-1,0,3,5,9,12], target = 2 输出: -1 解释: 2 不存在 nums 中因此返回 -1 \",\" 提示：\",\" 你可以假设 nums 中的所有元素是不重复的。\",\" n 将在 [1, 10000] 之间。\",\" nums 的每个元素都将在 [-9999, 9999] 之间。\"]},\"62\":{\"h\":\"前置知识\",\"t\":[\"数组\"]},\"63\":{\"h\":\"思路\",\"t\":[\"区间定义\",\"当我们选择「左闭右开」的时候，我们可以 0 来定义左边界(left)，而以数组的长度来定义右边界(right)，因此右边界我们是判断不到的。\",\"循环终止条件\",\"在左闭右开的情况，区间不为空，也就意味着 right 至少大于等于 left 。如果超过了这个条件，循环就终止。\",\"判断条件\",\"nums[mid]==target ，mid 就是我们要得到的结果，直接返回\",\"nums[mid]<target，我们应往右边的区间继续寻找，注意 mid 的位置我们是可以取到的，因此我们更新左边界的时候，应该为 left=mid+1\",\"nums[mid]>target，我们应往左边的区间找，而 mid 的位置明显不是答案，但是我们选择的是左闭右开区间，而右开所指向的位置本身就不在我们的候选区间里，所以 right=mid，而不是 right=mid−1.\",\"如果 mid−1 的位置正好是答案，在左闭右开的情况是找不到这个位置的\"]},\"64\":{\"h\":\"关键点\",\"t\":[\"左右区间的闭合\",\"左右区间的比较\"]},\"65\":{\"h\":\"代码\",\"t\":[\"Java Code:\",\" class Solution { public int search(int[] nums, int target) { int left = 0; int right = nums.length; while (left < right){ int mid = (right + left) / 2; if(nums[mid] > target){ right = mid; }else if(nums[mid] < target) { left = mid +1 ; }else{ return mid; } } return -1; }\",\"复杂度分析\",\"令 n 为数组长度。\",\"时间复杂度：O(logn)\",\"空间复杂度：O(1)\"]},\"66\":{\"h\":\"思路改进\",\"t\":[\"在 nums[mid]<target 和 nums[mid]==target 是可以合并起来的。当区间长度为 1 时，剩下的就是答案，由于 nums [mid] 可能等于答案，因此我们不能跳过这个 mid 的位置\",\"public int search(int[] nums, int target) { int left = 0; int right = nums.length; while (left < right){ int mid = (right + left)/2; if(nums[mid] > target){ right = mid; }else{ left = mid; } } if(nums[l] == target){ return l; } return -1; }\"]},\"67\":{\"h\":\"左闭右必区间\",\"t\":[\"public int search(int[] nums, int target) { int left = 0; int right = nums.length - 1; while(left <= right){ // #1 int mid = (right + left) / 2; if(nums[mid] == target){ return mid; }else if(nums[mid] < target){ left = mid + 1; // #2 }else{ right = mid - 1; // #3 } } return -1; }\"]},\"68\":{\"c\":[\"数组\",\"二分查找\"]},\"69\":{\"h\":\"977-有序数组的平方\"},\"70\":{\"h\":\"题目地址(977. 有序数组的平方 - 力扣（LeetCode）)\",\"t\":[\"https://leetcode.cn/problems/squares-of-a-sorted-array/description/\"]},\"71\":{\"h\":\"题目描述\",\"t\":[\" 给你一个按 非递减顺序 排序的整数数组 nums ，返回 每个数字的平方 组成的新数组，要求也按 非递减顺序 排序。\",\" 示例 1：\",\" 输入： nums = [-4,-1,0,3,10] 输出： [0,1,9,16,100] 解释： 平方后，数组变为 [16,1,0,9,100] 排序后，数组变为 [0,1,9,16,100] \",\" 示例 2：\",\" 输入： nums = [-7,-3,2,3,11] 输出： [4,9,9,49,121] \",\" 提示：\",\" 1 <= nums.length <= 10 4 \",\"-10 4 <= nums [i] <= 10 4 \",\" nums 已按 非递减顺序 排序 \",\" 进阶：\",\" 请你 设计时间复杂度为 O(n) 的算法解决本问题 \"]},\"72\":{\"h\":\"前置知识\",\"t\":[\"双指针\"]},\"73\":{\"h\":\"思路\",\"t\":[\"使用两个指针分别指向位置 0 和 n−1，每次比较两个指针对应的数，选择较大的那个逆序放入答案并移动指针。\"]},\"74\":{\"h\":\"关键点\",\"t\":[\"平方大小的比较 = 绝对值大小的比较\",\"双指针指向相等时，任意放一个进入结果数组即可。\"]},\"75\":{\"h\":\"代码\",\"t\":[\"语言支持：Java\",\"Java Code:\",\" class Solution { public int[] sortedSquares(int[] nums) { // 非递减 // 在正数，越大，平方也就越大 // 在负数，越小，平方越大 // 采用双指针，头尾比较 int left = 0; int right = nums.length - 1; int[] ret = new int[nums.length]; int index = right; while (left < right) { // 当left == right时，退出循环 if (Math.abs(nums[left]) < Math.abs(nums[right])) { ret[index--] = nums[right] * nums[right]; right--; } else if (Math.abs(nums[left]) > Math.abs(nums[right])) { ret[index--] = nums[left]*nums[left]; left++; }else if(Math.abs(nums[left]) == Math.abs(nums[right])){ ret[index--] = nums[right]*nums[right]; right--; } } ret[index] = nums[left]*nums[left]; return ret; } }\",\"复杂度分析\",\"令 n 为数组长度。\",\"时间复杂度：O(n)\",\"空间复杂度：O(1)，除了存储答案的数组以外，我们只需要维护常量空间。\"]},\"76\":{\"c\":[\"数组\",\"二分查找\"]},\"77\":{\"h\":\"LeetCode\",\"t\":[\"记录自己的刷题过程\"]},\"78\":{\"h\":\"数组总结篇\"},\"79\":{\"h\":\"什么是数组？\",\"t\":[\"数组是存放在「连续内存空间」上的「相同类型数据」的集合。\"]},\"80\":{\"h\":\"数组的特点\",\"t\":[\"索引从 0 开始\",\"内存地址是连续\",\"访问元素：O(1)\",\"插入和删除元素: O(n)\"]},\"81\":{\"h\":\"二分法\"},\"82\":{\"h\":\"二分查找模板 1\",\"t\":[\"public int binarySearch(int[] nums, int target){ int left = 0; int right = nums.length - 1; // 注意 1 while(left <= right){ // Prevent (left + right) overflow int mid = left + (right - left) / 2; if(nums[mid] == target){ return mid; } else if(nums[mid] < target) { left = mid + 1; // 注意 }else if(nums[mid] > target){ right = mid - 1; // 注意 } } // End Condition: left > right return -1; }\",\"初始化条件：left = 0, right = nums.length - 1 ，相当于闭区间 [left,right]，而这个区间就是我们的「搜索区间」\",\"循环停止条件：\",\"nums[mid] == target\",\"如果没有找到的情况下，「搜索区间」不存在。即 left > right => [right+1,right] ，区间不存在\",\" 如果非要用 while(left < right)，我该怎么办？\",\" //... while(left < right) { // ... } return nums [left] == target ? left : -1; \",\" 分析如下：\",\" 当退出循环时，存在 left == right ，不管是因为什么原因导致的， 左元素还是右元素最终有一个没做判断 \",\" left = mid + 1 ，所以才有 left == right 退出循环 \",\" right = mid - 1 ，所以才有 left == right 退出循环 \",\"向左查找，向右查找：在上面的「搜索区间」情况下，当 nums[mid] 查找不到时，此时 mid 已经被判断了。因此下次「搜索区间」应该是 [left,mid−1] 或者 [mid+1,right]\"]},\"83\":{\"h\":\"二分查找模版 2：找满足条件的最左侧的值\",\"t\":[\"int left_bound(int[] nums, int target) { if (nums.length == 0) return -1; int left = 0; int right = nums.length; // 注意 while (left < right) { // 注意 int mid = (left + right) / 2; if (nums[mid] == target) { right = mid; } else if (nums[mid] < target) { left = mid + 1; } else if (nums[mid] > target) { right = mid; // 注意 } } return left; }\",\"初始化条件：left = 0, right = nums.length ，每次循环的「搜索区间」是 [left, right) 左闭右开\",\"循环停止条件：left == right，[left,left) 区间为空，搜索停止。\",\"向左查找：nums[mid] > target，nums[mid] == target 都会改变 right 的值。其实相当于告诉我们 nums[mid]的值都在target的右侧。只有这样做，我们才能不断地 缩小「搜索区间」的上界right，在区间 [left, mid) 中继续搜索，即不断向左收缩，达到锁定左侧边界的目的。\",\"如果 target 在数组中，最后返回的结果 left 表示，数组中小于 target 的元素有 left 个，也可以表示 target 最左的下标为 left\",\"如果 target 不在数组中，假设一种极端情况\",\"[2,5,7,8] target = 1\",\"在循环过程中，left 一直保持不变，而 right 一直向左边靠近，最终 left == right 最后循环，最后返回 left = 0。\",\"含义是：数组中小于 1 的元素有 0 个。\",\"综上可以看出，函数的返回值（即 left 变量的值）取值区间是闭区间[0,nums.length]\",\"while (left < right) { //... } // target 比所有数都大 if (left == nums.length) return -1; // 类似之前算法的处理方式 return nums[left] == target ? left : -1; //if(left != nums.length && nums [left] == target){ //return left; //} //return -1;\"]},\"84\":{\"h\":\"二分查找模版 3：找满足条件的最右侧的值\",\"t\":[\"public int search(int[] nums,int target){ int left = 0; int right = nums.length; while(left < right){ int mid = left + (right - left) / 2; if (nums[mid] == target) { left = mid + 1; // 注意 } else if (nums[mid] < target) { left = mid + 1; } else if (nums[mid] > target) { right = mid; } } if(left != 0 && nums[left-1] == target){ return left - 1; } return -1; }\",\"当 nums[mid] == target 时，不要立即返回，而是 增大「搜索区间」的下界**left**，使得区间不断向右收缩，达到锁定右侧边界的目的。\",\"由于我们更新 left 是 left = mid + 1，那就出现一种情况，left = mid + 1 = right 越界退出循环。\",\"nums[left] 一定不等于 target，否则也不会导致 left = mid+ 1 的操作发生\",\"nums[left-1] 有可能是 target，所以要进行 后处理检查\"]},\"85\":{\"h\":\"双指针法\",\"t\":[\"双指针法（快慢指针法）：通过一个快指针和慢指针在一个 for 循环下完成两个 for 循环的工作。\"]},\"86\":{\"h\":\"滑动窗口\",\"t\":[\"根据当前子序列和大小的情况，不断调节子序列的起始位置。从而将 O(n2) 的暴力解法降为 O(n)。\",\"最小/最大子数组问题\",\"字符串模式匹配问题\",\"固定长度的子数组/子字符串问题\",\"固定长度的子数组/子字符串问题\"]},\"87\":{\"h\":\"模拟行为\",\"t\":[\"模拟类的题目在数组中很常见，不涉及到什么算法，就是单纯的模拟。\",\"循环不变量原则，其实这也是写程序中的重要原则。\"]},\"88\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"89\":{\"h\":\"About\"}},\"dirtCount\":0,\"index\":[[\"其实这也是写程序中的重要原则\",{\"1\":{\"87\":1}}],[\"其实相当于告诉我们\",{\"1\":{\"83\":1}}],[\"固定长度的子数组\",{\"1\":{\"86\":2}}],[\"字符串模式匹配问题\",{\"1\":{\"86\":1}}],[\"根据当前子序列和大小的情况\",{\"1\":{\"86\":1}}],[\"快慢指针法\",{\"1\":{\"85\":1}}],[\"后处理检查\",{\"1\":{\"84\":1}}],[\"有可能是\",{\"1\":{\"84\":1}}],[\"有序数组的平方\",{\"0\":{\"69\":1,\"70\":1}}],[\"否则也不会导致\",{\"1\":{\"84\":1}}],[\"否则返回\",{\"1\":{\"61\":1}}],[\"一定不等于\",{\"1\":{\"84\":1}}],[\"一直向左边靠近\",{\"1\":{\"83\":1}}],[\"一直保持不变\",{\"1\":{\"83\":1}}],[\"那就出现一种情况\",{\"1\":{\"84\":1}}],[\"达到锁定右侧边界的目的\",{\"1\":{\"84\":1}}],[\"达到锁定左侧边界的目的\",{\"1\":{\"83\":1}}],[\"增大\",{\"1\":{\"84\":1}}],[\"类似之前算法的处理方式\",{\"1\":{\"83\":1}}],[\"比所有数都大\",{\"1\":{\"83\":1}}],[\"取值区间是闭区间\",{\"1\":{\"83\":1}}],[\"取消注释下一行\",{\"1\":{\"5\":1}}],[\"变量的值\",{\"1\":{\"83\":1}}],[\"函数的返回值\",{\"1\":{\"83\":1}}],[\"综上可以看出\",{\"1\":{\"83\":1}}],[\"含义是\",{\"1\":{\"83\":1}}],[\"也可以表示\",{\"1\":{\"83\":1}}],[\"也就意味着\",{\"1\":{\"63\":1}}],[\"个\",{\"1\":{\"83\":2}}],[\"个元素有序的\",{\"1\":{\"61\":1}}],[\"个元素不等于\",{\"1\":{\"48\":1}}],[\"个元素之外留下了什么并不重要\",{\"1\":{\"46\":2}}],[\"个元素\",{\"1\":{\"46\":1}}],[\"个元素包含不等于\",{\"1\":{\"46\":1}}],[\"表示\",{\"1\":{\"83\":1}}],[\"只有这样做\",{\"1\":{\"83\":1}}],[\"都会改变\",{\"1\":{\"83\":1}}],[\"搜索停止\",{\"1\":{\"83\":1}}],[\"搜索区间\",{\"1\":{\"82\":4,\"83\":2,\"84\":1}}],[\"或者\",{\"1\":{\"82\":1}}],[\"应该是\",{\"1\":{\"82\":1}}],[\"应该为\",{\"1\":{\"63\":1}}],[\"已经被判断了\",{\"1\":{\"82\":1}}],[\"已按\",{\"1\":{\"71\":1}}],[\"查找不到时\",{\"1\":{\"82\":1}}],[\"查看详情\",{\"1\":{\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1}}],[\"情况下\",{\"1\":{\"82\":1}}],[\"向右查找\",{\"1\":{\"82\":1}}],[\"向左查找\",{\"1\":{\"82\":1,\"83\":1}}],[\"存在\",{\"1\":{\"82\":1}}],[\"我该怎么办\",{\"1\":{\"82\":1}}],[\"我们才能不断地\",{\"1\":{\"83\":1}}],[\"我们只需要维护常量空间\",{\"1\":{\"75\":1}}],[\"我们应往左边的区间找\",{\"1\":{\"63\":1}}],[\"我们应往右边的区间继续寻找\",{\"1\":{\"63\":1}}],[\"我们可以\",{\"1\":{\"63\":1}}],[\"即不断向左收缩\",{\"1\":{\"83\":1}}],[\"即\",{\"1\":{\"82\":1,\"83\":1}}],[\"即为新的数组长度\",{\"1\":{\"48\":1}}],[\"初始化条件\",{\"1\":{\"82\":1,\"83\":1}}],[\"初始化项目并上传到github\",{\"1\":{\"5\":1}}],[\"二分法\",{\"0\":{\"81\":1}}],[\"二分查找模版\",{\"0\":{\"83\":1,\"84\":1}}],[\"二分查找模板\",{\"0\":{\"82\":1}}],[\"二分查找\",{\"0\":{\"59\":1,\"60\":1},\"2\":{\"68\":1,\"76\":1}}],[\"插入和删除元素\",{\"1\":{\"80\":1}}],[\"插件来实现\",{\"1\":{\"17\":1}}],[\"访问元素\",{\"1\":{\"80\":1}}],[\"内存地址是连续\",{\"1\":{\"80\":1}}],[\"内容\",{\"1\":{\"17\":1}}],[\"开始\",{\"1\":{\"80\":1}}],[\"索引从\",{\"1\":{\"80\":1}}],[\"连续内存空间\",{\"1\":{\"79\":1}}],[\"什么是数组\",{\"0\":{\"79\":1}}],[\"记录自己的刷题过程\",{\"1\":{\"77\":1}}],[\"记得建立\",{\"1\":{\"5\":1}}],[\"除了存储答案的数组以外\",{\"1\":{\"75\":1}}],[\"退出循环\",{\"1\":{\"75\":1,\"82\":2}}],[\"头尾比较\",{\"1\":{\"75\":1}}],[\"采用双指针\",{\"1\":{\"75\":1}}],[\"越界退出循环\",{\"1\":{\"84\":1}}],[\"越小\",{\"1\":{\"75\":1}}],[\"越大\",{\"1\":{\"75\":1}}],[\"非递减\",{\"1\":{\"75\":1}}],[\"非递减顺序\",{\"1\":{\"71\":3}}],[\"任意放一个进入结果数组即可\",{\"1\":{\"74\":1}}],[\"任务列表\",{\"0\":{\"24\":1}}],[\"绝对值大小的比较\",{\"1\":{\"74\":1}}],[\"平方越大\",{\"1\":{\"75\":1}}],[\"平方也就越大\",{\"1\":{\"75\":1}}],[\"平方大小的比较\",{\"1\":{\"74\":1}}],[\"平方后\",{\"1\":{\"71\":1}}],[\"选择较大的那个逆序放入答案并移动指针\",{\"1\":{\"73\":1}}],[\"选项卡\",{\"0\":{\"20\":1}}],[\"双指针法\",{\"0\":{\"85\":1},\"1\":{\"85\":1}}],[\"双指针指向相等时\",{\"1\":{\"74\":1}}],[\"双指针\",{\"1\":{\"72\":1}}],[\"设计时间复杂度为\",{\"1\":{\"71\":1}}],[\"设置\",{\"1\":{\"5\":2}}],[\"组成的新数组\",{\"1\":{\"71\":1}}],[\"组件\",{\"0\":{\"27\":1,\"34\":1},\"1\":{\"34\":1}}],[\"可能等于答案\",{\"1\":{\"66\":1}}],[\"可以根据文件结构将它们转换为不同的页面\",{\"1\":{\"14\":1}}],[\"由于我们更新\",{\"1\":{\"84\":1}}],[\"由于\",{\"1\":{\"66\":1}}],[\"剩下的就是答案\",{\"1\":{\"66\":1}}],[\"左元素还是右元素最终有一个没做判断\",{\"1\":{\"82\":1}}],[\"左闭右必区间\",{\"0\":{\"67\":1}}],[\"左闭右开\",{\"1\":{\"63\":1,\"83\":1}}],[\"左右区间的比较\",{\"1\":{\"64\":1}}],[\"左右区间的闭合\",{\"1\":{\"64\":1}}],[\"所以要进行\",{\"1\":{\"84\":1}}],[\"所以才有\",{\"1\":{\"82\":2}}],[\"所以\",{\"1\":{\"63\":1}}],[\"所有元素\",{\"1\":{\"54\":1}}],[\"但是我们选择的是左闭右开区间\",{\"1\":{\"63\":1}}],[\"直接返回\",{\"1\":{\"63\":1}}],[\"直到不满足\",{\"1\":{\"43\":1}}],[\"直到符合最小窗口的长度\",{\"1\":{\"43\":1}}],[\"判断条件\",{\"1\":{\"63\":1}}],[\"循环不变量原则\",{\"1\":{\"87\":1}}],[\"循环的工作\",{\"1\":{\"85\":1}}],[\"循环下完成两个\",{\"1\":{\"85\":1}}],[\"循环停止条件\",{\"1\":{\"82\":1,\"83\":1}}],[\"循环就终止\",{\"1\":{\"63\":1}}],[\"循环终止条件\",{\"1\":{\"57\":1,\"63\":1}}],[\"至少大于等于\",{\"1\":{\"63\":1}}],[\"而是\",{\"1\":{\"84\":1}}],[\"而这个区间就是我们的\",{\"1\":{\"82\":1}}],[\"而右开所指向的位置本身就不在我们的候选区间里\",{\"1\":{\"63\":1}}],[\"而\",{\"1\":{\"63\":1,\"83\":1}}],[\"而以数组的长度来定义右边界\",{\"1\":{\"63\":1}}],[\"而不是\",{\"1\":{\"56\":1,\"63\":1}}],[\"来定义左边界\",{\"1\":{\"63\":1}}],[\"来解析\",{\"1\":{\"17\":1}}],[\"之间\",{\"1\":{\"61\":2}}],[\"出现在\",{\"1\":{\"61\":1}}],[\"写一个函数搜索\",{\"1\":{\"61\":1}}],[\"写作日期为\",{\"1\":{\"32\":1}}],[\"整型数组\",{\"1\":{\"61\":1}}],[\"升序\",{\"1\":{\"61\":1}}],[\"缩小\",{\"1\":{\"83\":1}}],[\"缩小左边界\",{\"1\":{\"58\":1}}],[\"缩小下边界\",{\"1\":{\"58\":1}}],[\"缩小右边界\",{\"1\":{\"58\":1}}],[\"缩小上边界\",{\"1\":{\"58\":1}}],[\"相当于闭区间\",{\"1\":{\"82\":1}}],[\"相当于缩小左边界\",{\"1\":{\"58\":1}}],[\"相当于缩小下边界\",{\"1\":{\"58\":1}}],[\"相当于缩小右边界\",{\"1\":{\"58\":1}}],[\"相当于缩小上边界\",{\"1\":{\"58\":1}}],[\"相同类型数据\",{\"1\":{\"79\":1}}],[\"相关配置文档请见\",{\"1\":{\"2\":1}}],[\"区间为空\",{\"1\":{\"83\":1}}],[\"区间不存在\",{\"1\":{\"82\":1}}],[\"区间不为空\",{\"1\":{\"63\":1}}],[\"区间定义\",{\"1\":{\"63\":1}}],[\"区间\",{\"1\":{\"58\":4}}],[\"填充的行肯定在\",{\"1\":{\"58\":2}}],[\"填充的列肯定在\",{\"1\":{\"58\":2}}],[\"填充到8时\",{\"1\":{\"56\":1}}],[\"就是单纯的模拟\",{\"1\":{\"87\":1}}],[\"就是我们要得到的结果\",{\"1\":{\"63\":1}}],[\"就可以很容易区分出来变化的量应该放在\",{\"1\":{\"58\":1}}],[\"就会导致退出循环\",{\"1\":{\"56\":1}}],[\"这样\",{\"1\":{\"58\":1}}],[\"这意味着你可以在\",{\"1\":{\"34\":1}}],[\"按照通常的思维\",{\"1\":{\"58\":1}}],[\"按照题目进行模拟\",{\"1\":{\"56\":1}}],[\"边界变化条件\",{\"1\":{\"57\":1}}],[\"矩阵中心数字无法在迭代过程中被填充的问题\",{\"1\":{\"56\":1}}],[\"作为迭代条件\",{\"1\":{\"56\":1}}],[\"作者设置为\",{\"1\":{\"32\":1}}],[\"下边界缩减\",{\"1\":{\"56\":2}}],[\"下一篇\",{\"1\":{\"8\":1}}],[\"右边界缩减\",{\"1\":{\"56\":1}}],[\"从而将\",{\"1\":{\"86\":1}}],[\"从下向上填充\",{\"1\":{\"58\":2}}],[\"从下到上\",{\"1\":{\"56\":1}}],[\"从右向左填充\",{\"1\":{\"58\":2}}],[\"从右到左\",{\"1\":{\"56\":1}}],[\"从上向下填充\",{\"1\":{\"58\":2}}],[\"从上到下\",{\"1\":{\"56\":1}}],[\"从左向右填充\",{\"1\":{\"58\":1}}],[\"从左到右填充\",{\"1\":{\"58\":1}}],[\"从左到右\",{\"1\":{\"56\":1}}],[\"定义好上下左右四个边界\",{\"1\":{\"56\":1}}],[\"定义两个指针\",{\"1\":{\"41\":1}}],[\"模拟类的题目在数组中很常见\",{\"1\":{\"87\":1}}],[\"模拟行为\",{\"0\":{\"87\":1}}],[\"模拟\",{\"1\":{\"55\":1}}],[\"6\",{\"1\":{\"54\":1}}],[\"977\",{\"0\":{\"69\":1,\"70\":1}}],[\"9999\",{\"1\":{\"61\":2}}],[\"9\",{\"1\":{\"54\":1,\"61\":4,\"71\":5}}],[\"8\",{\"1\":{\"54\":1,\"83\":1}}],[\"正方形矩阵\",{\"1\":{\"54\":1}}],[\"x\",{\"1\":{\"54\":1}}],[\"且元素按顺时针顺序螺旋排列的\",{\"1\":{\"54\":1}}],[\"到\",{\"1\":{\"54\":1}}],[\"生成一个包含\",{\"1\":{\"54\":1}}],[\"螺旋矩阵\",{\"0\":{\"52\":1,\"53\":1}}],[\"拷贝覆盖\",{\"1\":{\"49\":1}}],[\"最大子数组问题\",{\"1\":{\"86\":1}}],[\"最小\",{\"1\":{\"86\":1}}],[\"最小窗口长度右移\",{\"1\":{\"43\":1}}],[\"最终\",{\"1\":{\"83\":1}}],[\"最左的下标为\",{\"1\":{\"83\":1}}],[\"最后返回\",{\"1\":{\"83\":1}}],[\"最后返回的结果\",{\"1\":{\"83\":1}}],[\"最后循环\",{\"1\":{\"83\":1}}],[\"最后\",{\"1\":{\"48\":1}}],[\"则跳过该数字不进行拷贝覆盖\",{\"1\":{\"48\":1}}],[\"则进行拷贝覆盖\",{\"1\":{\"48\":1}}],[\"自增\",{\"1\":{\"48\":1}}],[\"时\",{\"1\":{\"48\":1,\"56\":1,\"66\":1,\"84\":1}}],[\"时间复杂度\",{\"1\":{\"43\":1,\"50\":1,\"58\":1,\"65\":1,\"75\":1}}],[\"时间复杂度的解法\",{\"1\":{\"39\":2}}],[\"不涉及到什么算法\",{\"1\":{\"87\":1}}],[\"不断调节子序列的起始位置\",{\"1\":{\"86\":1}}],[\"不要立即返回\",{\"1\":{\"84\":1}}],[\"不在数组中\",{\"1\":{\"83\":1}}],[\"不管是因为什么原因导致的\",{\"1\":{\"82\":1}}],[\"不存在\",{\"1\":{\"61\":1,\"82\":1}}],[\"不相同\",{\"1\":{\"48\":1}}],[\"不同的元素的数量\",{\"1\":{\"46\":1}}],[\"在循环过程中\",{\"1\":{\"83\":1}}],[\"在数组中\",{\"1\":{\"83\":1}}],[\"在区间\",{\"1\":{\"83\":1}}],[\"在上面的\",{\"1\":{\"82\":1}}],[\"在负数\",{\"1\":{\"75\":1}}],[\"在正数\",{\"1\":{\"75\":1}}],[\"在\",{\"1\":{\"66\":1}}],[\"在左闭右开的情况是找不到这个位置的\",{\"1\":{\"63\":1}}],[\"在左闭右开的情况\",{\"1\":{\"63\":1}}],[\"在遍历过程中如果出现数字与需要移除的值\",{\"1\":{\"48\":1}}],[\"在页面禁用功能与布局\",{\"1\":{\"8\":1}}],[\"同时设置一个下标\",{\"1\":{\"48\":1}}],[\"同时每个页面包含\",{\"1\":{\"11\":1}}],[\"每次循环的\",{\"1\":{\"83\":1}}],[\"每次比较两个指针对应的数\",{\"1\":{\"73\":1}}],[\"每次取出的数字变量为\",{\"1\":{\"48\":1}}],[\"每个数字的平方\",{\"1\":{\"71\":1}}],[\"每个\",{\"1\":{\"34\":1}}],[\"遍历数组\",{\"1\":{\"48\":1}}],[\"题意\",{\"1\":{\"48\":1}}],[\"题目描述\",{\"0\":{\"39\":1,\"46\":1,\"54\":1,\"61\":1,\"71\":1}}],[\"题目地址\",{\"0\":{\"38\":1,\"45\":1,\"53\":1,\"60\":1,\"70\":1}}],[\"思路改进\",{\"0\":{\"66\":1}}],[\"思路\",{\"0\":{\"48\":1,\"56\":1,\"63\":1,\"73\":1}}],[\"思路1\",{\"0\":{\"41\":1}}],[\"59\",{\"0\":{\"52\":1,\"53\":1}}],[\"50\",{\"1\":{\"46\":1}}],[\"5\",{\"1\":{\"46\":2,\"54\":1,\"61\":2,\"83\":1}}],[\"并且\",{\"1\":{\"46\":2}}],[\"并返回其长度\",{\"1\":{\"39\":1}}],[\"排序后\",{\"1\":{\"71\":1}}],[\"排序的整数数组\",{\"1\":{\"71\":1}}],[\"排序\",{\"1\":{\"46\":1,\"71\":2}}],[\"调用你的实现\",{\"1\":{\"46\":1}}],[\"它以不等于\",{\"1\":{\"46\":1}}],[\"长度正确的预期答案\",{\"1\":{\"46\":1}}],[\"长度最小的子数组\",{\"0\":{\"37\":1,\"38\":1}}],[\"评测机将使用以下代码测试您的解决方案\",{\"1\":{\"46\":1}}],[\"评论\",{\"1\":{\"8\":1,\"11\":1}}],[\"用户评测\",{\"1\":{\"46\":1}}],[\"使得区间不断向右收缩\",{\"1\":{\"84\":1}}],[\"使用两个指针分别指向位置\",{\"1\":{\"73\":1}}],[\"使用\",{\"1\":{\"56\":1}}],[\"使用指南\",{\"1\":{\"32\":2},\"2\":{\"7\":1,\"9\":1,\"28\":1,\"35\":1,\"36\":1}}],[\"使\",{\"1\":{\"46\":1}}],[\"数组中小于\",{\"1\":{\"83\":2}}],[\"数组的特点\",{\"0\":{\"80\":1}}],[\"数组是存放在\",{\"1\":{\"79\":1}}],[\"数组总结篇\",{\"0\":{\"78\":1}}],[\"数组变为\",{\"1\":{\"71\":2}}],[\"数组\",{\"1\":{\"46\":1,\"47\":1,\"55\":1,\"62\":1},\"2\":{\"51\":1,\"68\":1,\"76\":1}}],[\"更改\",{\"1\":{\"46\":1}}],[\"更新时间等页面元信息\",{\"1\":{\"11\":1}}],[\"更新时间\",{\"1\":{\"8\":1}}],[\"您需要执行以下操作\",{\"1\":{\"46\":1}}],[\"要求也按\",{\"1\":{\"71\":1}}],[\"要移除的值\",{\"1\":{\"46\":1}}],[\"要通过此题\",{\"1\":{\"46\":1}}],[\"要将\",{\"1\":{\"42\":1}}],[\"k\",{\"1\":{\"46\":11,\"48\":1}}],[\"假设一种极端情况\",{\"1\":{\"83\":1}}],[\"假设\",{\"1\":{\"46\":1}}],[\"然后返回\",{\"1\":{\"46\":1}}],[\"元素的顺序可能发生改变\",{\"1\":{\"46\":1}}],[\"移除所有数值等于\",{\"1\":{\"46\":1}}],[\"移除元素\",{\"0\":{\"44\":1,\"45\":1}}],[\"原地\",{\"1\":{\"46\":1,\"48\":1}}],[\"给定一个\",{\"1\":{\"61\":1}}],[\"给定一个含有\",{\"1\":{\"39\":1}}],[\"给你一个按\",{\"1\":{\"71\":1}}],[\"给你一个正整数\",{\"1\":{\"54\":1}}],[\"给你一个数组\",{\"1\":{\"46\":1}}],[\"else\",{\"1\":{\"65\":2,\"66\":1,\"67\":2,\"75\":2,\"82\":2,\"83\":2,\"84\":2}}],[\"element\",{\"1\":{\"45\":1}}],[\"expectednums\",{\"1\":{\"46\":3}}],[\"end++\",{\"1\":{\"43\":1}}],[\"end−start+1\",{\"1\":{\"41\":1}}],[\"end\",{\"1\":{\"41\":1,\"43\":6,\"82\":1}}],[\"enhance\",{\"1\":{\"19\":1}}],[\"env\",{\"1\":{\"5\":1}}],[\"environment\",{\"1\":{\"5\":1}}],[\"enable\",{\"1\":{\"5\":1}}],[\"空间复杂度为\",{\"1\":{\"48\":1}}],[\"空间复杂度\",{\"1\":{\"43\":1,\"50\":1,\"58\":1,\"65\":1,\"75\":1}}],[\"令\",{\"1\":{\"43\":1,\"50\":1,\"58\":1,\"65\":1,\"75\":1}}],[\"复杂度分析\",{\"1\":{\"43\":1,\"50\":1,\"58\":1,\"65\":1,\"75\":1}}],[\"此时\",{\"1\":{\"43\":1,\"56\":1,\"82\":1}}],[\"此文字有脚注\",{\"1\":{\"21\":1}}],[\"把当前元素添加进去\",{\"1\":{\"43\":1}}],[\"<target\",{\"1\":{\"63\":1,\"66\":1}}],[\"<\",{\"1\":{\"43\":1,\"46\":1,\"65\":2,\"66\":1,\"67\":1,\"75\":2,\"82\":3,\"83\":3,\"84\":2}}],[\"<=bottom\",{\"1\":{\"58\":1}}],[\"<=\",{\"1\":{\"39\":6,\"46\":6,\"54\":2,\"58\":2,\"67\":1,\"71\":4,\"82\":1}}],[\"滑动串口的指针和右指针\",{\"1\":{\"43\":1}}],[\"滑动窗口\",{\"0\":{\"41\":1,\"86\":1},\"1\":{\"40\":1}}],[\"第一次符合条件为窗口长度\",{\"1\":{\"43\":1}}],[\"语言支持\",{\"1\":{\"43\":1,\"50\":1,\"58\":1,\"75\":1}}],[\"语法\",{\"0\":{\"23\":1},\"1\":{\"19\":1,\"34\":1}}],[\"语法进行了扩展\",{\"1\":{\"18\":1}}],[\"语法扩展\",{\"1\":{\"17\":1}}],[\"代码\",{\"0\":{\"43\":1,\"50\":1,\"58\":1,\"65\":1,\"75\":1}}],[\"关键点\",{\"0\":{\"42\":1,\"49\":1,\"57\":1,\"64\":1,\"74\":1}}],[\"关于这些扩展\",{\"1\":{\"18\":1}}],[\"关于本站\",{\"0\":{\"5\":1}}],[\"关于我\",{\"0\":{\"3\":1,\"4\":1}}],[\"继续更新子数组的最小长度\",{\"1\":{\"41\":1}}],[\"继续往右移\",{\"1\":{\"41\":1,\"42\":1}}],[\"找满足条件的最右侧的值\",{\"0\":{\"84\":1}}],[\"找满足条件的最左侧的值\",{\"0\":{\"83\":1}}],[\"找到更小的窗口长度\",{\"1\":{\"41\":1,\"42\":1}}],[\"找出该数组中满足其总和大于等于target的长度最小的\",{\"1\":{\"39\":1}}],[\"将在\",{\"1\":{\"61\":1}}],[\"将\",{\"1\":{\"41\":1}}],[\"窗口的长度为子数组的最小长度\",{\"1\":{\"41\":1}}],[\"符合题目时\",{\"1\":{\"41\":1}}],[\"当退出循环时\",{\"1\":{\"82\":1}}],[\"当left\",{\"1\":{\"75\":1}}],[\"当区间长度为\",{\"1\":{\"66\":1}}],[\"当我们选择\",{\"1\":{\"63\":1}}],[\"当窗口符合条件时\",{\"1\":{\"42\":1}}],[\"当\",{\"1\":{\"41\":1,\"56\":1,\"82\":1,\"84\":1}}],[\"计算滑动窗口的总和\",{\"1\":{\"41\":1}}],[\"计划\",{\"1\":{\"24\":2}}],[\"前\",{\"1\":{\"48\":1}}],[\"前缀和+二分查找\",{\"1\":{\"40\":1}}],[\"前置知识\",{\"0\":{\"40\":1,\"47\":1,\"55\":1,\"62\":1,\"72\":1}}],[\"进阶\",{\"1\":{\"39\":1,\"71\":1}}],[\"进行引用\",{\"1\":{\"33\":1}}],[\"提示\",{\"1\":{\"39\":1,\"46\":1,\"54\":1,\"61\":1,\"71\":1}}],[\"提供更加丰富的写作功能\",{\"1\":{\"19\":1}}],[\"解释\",{\"1\":{\"39\":1,\"46\":2,\"61\":2,\"71\":1}}],[\"输出\",{\"1\":{\"39\":3,\"46\":2,\"54\":2,\"61\":2,\"71\":2}}],[\"输入数组\",{\"1\":{\"46\":1}}],[\"输入\",{\"1\":{\"39\":3,\"46\":2,\"54\":2,\"61\":2,\"71\":2}}],[\"404\",{\"1\":{\"88\":1}}],[\"49\",{\"1\":{\"71\":1}}],[\"4\",{\"1\":{\"39\":5,\"46\":3,\"54\":1,\"61\":2,\"71\":5}}],[\"3\",{\"0\":{\"84\":1},\"1\":{\"39\":4,\"46\":6,\"54\":2,\"56\":1,\"61\":2,\"67\":1,\"71\":3}}],[\"704\",{\"0\":{\"59\":1,\"60\":1}}],[\"7\",{\"1\":{\"39\":1,\"54\":1,\"71\":1,\"83\":1}}],[\"示例\",{\"1\":{\"39\":3,\"46\":2,\"54\":2,\"61\":2,\"71\":2}}],[\"0\",{\"1\":{\"39\":2,\"43\":6,\"46\":11,\"50\":1,\"58\":2,\"61\":2,\"63\":1,\"65\":1,\"66\":1,\"67\":1,\"71\":4,\"73\":1,\"75\":1,\"80\":1,\"82\":2,\"83\":6,\"84\":2}}],[\"06\",{\"1\":{\"5\":3}}],[\"返回\",{\"1\":{\"39\":1,\"46\":1,\"71\":1}}],[\"返回顶部按钮\",{\"1\":{\"8\":1,\"11\":1}}],[\"如果非要用\",{\"1\":{\"82\":1}}],[\"如果没有找到的情况下\",{\"1\":{\"82\":1}}],[\"如果\",{\"1\":{\"63\":1,\"83\":2}}],[\"如果超过了这个条件\",{\"1\":{\"63\":1}}],[\"如果目标值存在返回下标\",{\"1\":{\"61\":1}}],[\"如果相同的时候\",{\"1\":{\"48\":1}}],[\"如果所有的断言都通过\",{\"1\":{\"46\":1}}],[\"如果不存在符合条件的子数组\",{\"1\":{\"39\":1}}],[\"如果你已经实现o\",{\"1\":{\"39\":1}}],[\"如果你是一个新手\",{\"1\":{\"15\":1}}],[\"如果你文档需要\",{\"1\":{\"5\":1}}],[\"子字符串问题\",{\"1\":{\"86\":2}}],[\"子数组\",{\"1\":{\"39\":2}}],[\"子模块\",{\"1\":{\"5\":1}}],[\"力扣\",{\"0\":{\"38\":1,\"45\":1,\"53\":1,\"60\":1,\"70\":1}}],[\"+1\",{\"1\":{\"65\":1}}],[\"+=\",{\"1\":{\"43\":1}}],[\"+\",{\"1\":{\"34\":1,\"43\":2,\"65\":1,\"66\":1,\"67\":2,\"82\":4,\"83\":2,\"84\":5}}],[\"图片引入\",{\"1\":{\"33\":1}}],[\"图片增强\",{\"0\":{\"25\":1}}],[\"标签为\",{\"1\":{\"32\":1}}],[\"标题会被视为页面标题\",{\"1\":{\"31\":1}}],[\"标题和页面信息\",{\"1\":{\"11\":1}}],[\"分析如下\",{\"1\":{\"82\":1}}],[\"分别指向滑动窗口的开始位置和结束位置\",{\"1\":{\"41\":1}}],[\"分类为\",{\"1\":{\"32\":1}}],[\"分支\",{\"1\":{\"5\":1}}],[\"日\",{\"1\":{\"32\":1}}],[\"月\",{\"1\":{\"32\":1}}],[\"年\",{\"1\":{\"32\":1}}],[\"的暴力解法降为\",{\"1\":{\"86\":1}}],[\"的操作发生\",{\"1\":{\"84\":1}}],[\"的下界\",{\"1\":{\"84\":1}}],[\"的上界right\",{\"1\":{\"83\":1}}],[\"的值都在target的右侧\",{\"1\":{\"83\":1}}],[\"的值\",{\"1\":{\"83\":1}}],[\"的值排序\",{\"1\":{\"46\":1}}],[\"的集合\",{\"1\":{\"79\":1}}],[\"的算法解决本问题\",{\"1\":{\"71\":1}}],[\"的位置\",{\"1\":{\"66\":1}}],[\"的位置正好是答案\",{\"1\":{\"63\":1}}],[\"的位置明显不是答案\",{\"1\":{\"63\":1}}],[\"的位置我们是可以取到的\",{\"1\":{\"63\":1}}],[\"的时候\",{\"1\":{\"63\":1}}],[\"的每个元素都将在\",{\"1\":{\"61\":1}}],[\"的第一个还是第二个\",{\"1\":{\"58\":1}}],[\"的大小并不重要\",{\"1\":{\"46\":1}}],[\"的其余元素和\",{\"1\":{\"46\":1}}],[\"的前\",{\"1\":{\"46\":2}}],[\"的元素有\",{\"1\":{\"83\":2}}],[\"的元素数量为\",{\"1\":{\"46\":1}}],[\"的元素\",{\"1\":{\"46\":2}}],[\"的\",{\"1\":{\"31\":1,\"32\":1}}],[\"about\",{\"0\":{\"89\":1}}],[\"abs\",{\"1\":{\"75\":6}}],[\"array\",{\"1\":{\"70\":1}}],[\"a\",{\"1\":{\"70\":1}}],[\"actuallength\",{\"1\":{\"46\":1}}],[\"action\",{\"1\":{\"5\":2}}],[\"actions\",{\"1\":{\"5\":2}}],[\"ans++\",{\"1\":{\"50\":1}}],[\"ans\",{\"1\":{\"43\":6,\"48\":4,\"50\":3}}],[\"assert\",{\"1\":{\"46\":2}}],[\"as\",{\"1\":{\"31\":1}}],[\"https\",{\"1\":{\"38\":1,\"45\":1,\"53\":1,\"60\":1,\"70\":1}}],[\"hope\",{\"1\":{\"32\":1}}],[\"h1\",{\"1\":{\"31\":2}}],[\"h2o\",{\"1\":{\"26\":1}}],[\"注释之前的内容被视为文章摘要\",{\"1\":{\"30\":1}}],[\"注意这五个元素可以任意顺序返回\",{\"1\":{\"46\":1}}],[\"注意\",{\"1\":{\"5\":1,\"63\":1,\"82\":3,\"83\":3,\"84\":1}}],[\"上的\",{\"1\":{\"79\":1}}],[\"上边界缩减\",{\"1\":{\"56\":1}}],[\"上下角标\",{\"0\":{\"26\":1}}],[\"上一篇\",{\"1\":{\"8\":1}}],[\"支持为图片设置颜色模式和大小\",{\"1\":{\"25\":1}}],[\"27\",{\"0\":{\"44\":1,\"45\":1}}],[\"2\",{\"0\":{\"83\":1},\"1\":{\"24\":1,\"39\":4,\"46\":12,\"54\":3,\"61\":3,\"65\":1,\"66\":1,\"67\":2,\"71\":2,\"82\":1,\"83\":2,\"84\":1}}],[\"209\",{\"0\":{\"37\":1,\"38\":1}}],[\"2020\",{\"1\":{\"32\":1}}],[\"2024\",{\"1\":{\"5\":3}}],[\"20\",{\"1\":{\"5\":1,\"54\":1}}],[\"−1\",{\"1\":{\"23\":1}}],[\"ret\",{\"1\":{\"75\":6}}],[\"return\",{\"1\":{\"43\":2,\"50\":1,\"58\":1,\"65\":2,\"66\":2,\"67\":2,\"75\":1,\"82\":3,\"83\":6,\"84\":2}}],[\"res\",{\"1\":{\"58\":6}}],[\"removeelement\",{\"1\":{\"46\":1,\"50\":1}}],[\"remove\",{\"1\":{\"45\":1}}],[\"regarded\",{\"1\":{\"31\":1}}],[\"right+1\",{\"1\":{\"82\":1}}],[\"right时\",{\"1\":{\"75\":1}}],[\"right=mid−1\",{\"1\":{\"63\":1}}],[\"right=mid\",{\"1\":{\"63\":1}}],[\"right\",{\"1\":{\"43\":1,\"56\":1,\"58\":7,\"63\":2,\"65\":4,\"66\":4,\"67\":4,\"75\":12,\"82\":17,\"83\":12,\"84\":5}}],[\"r−i​\",{\"1\":{\"23\":1}}],[\"r−i+1\",{\"1\":{\"23\":1}}],[\"r+i=1∑r​ωi\",{\"1\":{\"23\":1}}],[\"run\",{\"1\":{\"5\":3}}],[\"runs\",{\"1\":{\"5\":1}}],[\"=>\",{\"1\":{\"82\":1}}],[\"=num\",{\"1\":{\"48\":1}}],[\"==target\",{\"1\":{\"63\":1,\"66\":1}}],[\"==\",{\"1\":{\"43\":2,\"46\":2,\"66\":1,\"67\":1,\"75\":2,\"82\":6,\"83\":8,\"84\":3}}],[\"=\",{\"1\":{\"23\":1,\"39\":6,\"43\":8,\"46\":13,\"50\":3,\"54\":2,\"56\":1,\"58\":15,\"61\":4,\"65\":5,\"66\":5,\"67\":5,\"71\":2,\"74\":1,\"75\":8,\"82\":9,\"83\":11,\"84\":11}}],[\"ωyω​\",{\"1\":{\"23\":2}}],[\"∂ωr∂r​\",{\"1\":{\"23\":1}}],[\"导入文件\",{\"0\":{\"22\":1}}],[\"导航栏\",{\"1\":{\"8\":1,\"11\":1}}],[\"脚注\",{\"0\":{\"21\":1}}],[\"对于变量的边界怎么定义\",{\"1\":{\"58\":1}}],[\"对于\",{\"1\":{\"33\":1}}],[\"对\",{\"1\":{\"18\":1}}],[\"为奇数时\",{\"1\":{\"56\":1}}],[\"为数组长度\",{\"1\":{\"43\":1,\"50\":1,\"58\":1,\"65\":1,\"75\":1}}],[\"为了丰富文档写作\",{\"1\":{\"18\":1}}],[\"为每个\",{\"1\":{\"16\":1}}],[\"会使用\",{\"1\":{\"17\":1}}],[\"扩展\",{\"0\":{\"17\":1,\"18\":1},\"1\":{\"18\":1}}],[\"了解详情\",{\"1\":{\"16\":1}}],[\"请你\",{\"1\":{\"71\":1}}],[\"请尝试设计一个\",{\"1\":{\"39\":1}}],[\"请使用绝对链接\",{\"1\":{\"33\":1}}],[\"请阅读\",{\"1\":{\"16\":1,\"18\":1}}],[\"请先阅读\",{\"1\":{\"15\":1}}],[\"中继续搜索\",{\"1\":{\"83\":1}}],[\"中因此返回\",{\"1\":{\"61\":1}}],[\"中并且下标为\",{\"1\":{\"61\":1}}],[\"中心数字无法在迭代过程中被填充\",{\"1\":{\"56\":1}}],[\"中不等于\",{\"1\":{\"46\":1}}],[\"中与\",{\"1\":{\"46\":1}}],[\"中使用\",{\"1\":{\"34\":1}}],[\"中设置页面信息\",{\"1\":{\"32\":1}}],[\"中设置页面标题\",{\"1\":{\"31\":1}}],[\"中的所有元素是不重复的\",{\"1\":{\"61\":1}}],[\"中的前五个元素为\",{\"1\":{\"46\":1}}],[\"中的前两个元素均为\",{\"1\":{\"46\":1}}],[\"中的第一个\",{\"1\":{\"31\":1}}],[\"中的\",{\"1\":{\"18\":1,\"61\":1}}],[\"中很重要的一个概念\",{\"1\":{\"16\":1}}],[\"中自定义它们\",{\"1\":{\"11\":1}}],[\"是可以合并起来的\",{\"1\":{\"66\":1}}],[\"是为了解决当\",{\"1\":{\"56\":1}}],[\"是该条件下的长度最小的子数组\",{\"1\":{\"39\":1}}],[\"是\",{\"1\":{\"16\":1,\"83\":1,\"84\":1}}],[\"通过一个快指针和慢指针在一个\",{\"1\":{\"85\":1}}],[\"通过上面的总结会发现边界的起始和结束与方向是对应的\",{\"1\":{\"58\":1}}],[\"通过\",{\"1\":{\"16\":1,\"19\":1,\"46\":1}}],[\"配置\",{\"0\":{\"16\":1}}],[\"配置项的相关说明详见\",{\"1\":{\"0\":1}}],[\"演示\",{\"1\":{\"15\":1}}],[\"和一个目标值\",{\"1\":{\"61\":1}}],[\"和一个值\",{\"1\":{\"46\":1}}],[\"和\",{\"1\":{\"15\":1,\"32\":1,\"41\":1,\"66\":1,\"73\":1}}],[\"还不会编写\",{\"1\":{\"15\":1}}],[\"以便\",{\"1\":{\"14\":1}}],[\"你在返回的\",{\"1\":{\"46\":2}}],[\"你的函数应该返回\",{\"1\":{\"46\":1}}],[\"你的函数函数应该返回\",{\"1\":{\"46\":1}}],[\"你的解决方案将会\",{\"1\":{\"46\":1}}],[\"你需要\",{\"1\":{\"46\":1}}],[\"你需要创建并编写\",{\"1\":{\"14\":1}}],[\"你也可以创建并引入你自己的组件\",{\"1\":{\"34\":1}}],[\"你可以假设\",{\"1\":{\"61\":1}}],[\"你可以将图片和\",{\"1\":{\"33\":1}}],[\"你可以自由在这里书写你的\",{\"1\":{\"33\":1}}],[\"你可以在\",{\"1\":{\"31\":1,\"32\":1}}],[\"你可以在主题选项和页面的\",{\"1\":{\"11\":1}}],[\"你可以使用它轻松生成文档或博客站点\",{\"1\":{\"14\":1}}],[\"你可以通过设置页面的\",{\"1\":{\"8\":1}}],[\"因此下次\",{\"1\":{\"82\":1}}],[\"因此我们不能跳过这个\",{\"1\":{\"66\":1}}],[\"因此我们更新左边界的时候\",{\"1\":{\"63\":1}}],[\"因此右边界我们是判断不到的\",{\"1\":{\"63\":1}}],[\"因此它们并不计入评测\",{\"1\":{\"46\":2}}],[\"因此可以借助于\",{\"1\":{\"17\":1}}],[\"因此\",{\"1\":{\"14\":1}}],[\"展示\",{\"0\":{\"14\":1}}],[\"指南\",{\"2\":{\"12\":1}}],[\"打印按钮\",{\"1\":{\"11\":1}}],[\"夜间模式按钮\",{\"1\":{\"11\":1}}],[\"文章标题列表\",{\"1\":{\"11\":1}}],[\"文件夹的图片\",{\"1\":{\"33\":1}}],[\"文件放置在一起使用相对路径进行引用\",{\"1\":{\"33\":1}}],[\"文件生成页面\",{\"1\":{\"14\":1}}],[\"文件\",{\"1\":{\"5\":1}}],[\"布局包括\",{\"1\":{\"11\":1}}],[\"布局\",{\"0\":{\"11\":1},\"2\":{\"13\":1}}],[\"布局与功能禁用\",{\"0\":{\"8\":1}}],[\"禁用\",{\"2\":{\"10\":1}}],[\"禁用了如下功能\",{\"1\":{\"8\":1}}],[\"页面都会被转换为一个\",{\"1\":{\"34\":1}}],[\"页面内容\",{\"0\":{\"33\":1}}],[\"页面标题\",{\"0\":{\"31\":1},\"1\":{\"31\":1}}],[\"页面配置\",{\"0\":{\"30\":1},\"1\":{\"32\":1},\"2\":{\"36\":1}}],[\"页面引入配置\",{\"1\":{\"16\":1}}],[\"页面信息\",{\"0\":{\"32\":1},\"1\":{\"8\":1}}],[\"页脚\",{\"1\":{\"8\":1,\"11\":1}}],[\"链接\",{\"1\":{\"8\":1}}],[\"编辑此页链接\",{\"1\":{\"8\":1}}],[\"贡献者\",{\"1\":{\"8\":1,\"11\":1}}],[\"路径导航\",{\"1\":{\"8\":1,\"11\":1}}],[\"侧边栏\",{\"1\":{\"8\":1,\"11\":1}}],[\"本页面就是一个示例\",{\"1\":{\"8\":1}}],[\"主题扩展了更多\",{\"1\":{\"19\":1}}],[\"主题扩展\",{\"0\":{\"19\":1}}],[\"主题也带有以下元素\",{\"1\":{\"11\":1}}],[\"主要从\",{\"1\":{\"14\":1}}],[\"主要功能与配置演示\",{\"0\":{\"6\":1}}],[\"主页\",{\"0\":{\"0\":1}}],[\">target\",{\"1\":{\"63\":1}}],[\">=\",{\"1\":{\"43\":1,\"58\":2}}],[\">\",{\"1\":{\"5\":1,\"65\":1,\"66\":1,\"75\":1,\"82\":3,\"83\":2,\"84\":1}}],[\"binarysearch\",{\"1\":{\"82\":1}}],[\"binary\",{\"1\":{\"60\":1}}],[\"bound\",{\"1\":{\"83\":1}}],[\"bootom\",{\"1\":{\"58\":1}}],[\"bottom\",{\"1\":{\"56\":1,\"58\":5}}],[\"be\",{\"1\":{\"31\":1}}],[\"branch\",{\"1\":{\"5\":1}}],[\"branches\",{\"1\":{\"5\":1}}],[\"build\",{\"1\":{\"5\":1}}],[\"overflow\",{\"1\":{\"82\":1}}],[\"of\",{\"1\":{\"70\":1}}],[\"o\",{\"1\":{\"39\":1,\"43\":2,\"48\":1,\"50\":2,\"58\":2,\"65\":2,\"71\":1,\"75\":2,\"80\":2,\"86\":2}}],[\"old\",{\"1\":{\"5\":1}}],[\"options\",{\"1\":{\"5\":1}}],[\"on\",{\"1\":{\"5\":2}}],[\"构建文档\",{\"1\":{\"5\":1}}],[\"l\",{\"1\":{\"66\":2}}],[\"l<r∣∣t<b\",{\"1\":{\"56\":1}}],[\"left=mid+1\",{\"1\":{\"63\":1}}],[\"left++\",{\"1\":{\"58\":1,\"75\":1}}],[\"left\",{\"1\":{\"43\":1,\"56\":1,\"58\":6,\"63\":2,\"65\":4,\"66\":4,\"67\":4,\"75\":9,\"82\":19,\"83\":26,\"84\":16}}],[\"length\",{\"1\":{\"39\":1,\"43\":1,\"46\":2,\"65\":1,\"66\":1,\"67\":1,\"71\":1,\"75\":2,\"82\":2,\"83\":6,\"84\":1}}],[\"leetcode\",{\"0\":{\"38\":1,\"45\":1,\"53\":1,\"60\":1,\"70\":1,\"77\":1},\"1\":{\"38\":1,\"45\":1,\"53\":1,\"60\":1,\"70\":1}}],[\"logn\",{\"1\":{\"65\":1}}],[\"log\",{\"1\":{\"39\":1}}],[\"logy\",{\"1\":{\"23\":2}}],[\"lockfile\",{\"1\":{\"5\":1}}],[\"latest\",{\"1\":{\"5\":1}}],[\"found\",{\"1\":{\"88\":1}}],[\"for循环中变量定义成i或j的细节\",{\"1\":{\"58\":1}}],[\"for\",{\"1\":{\"46\":1,\"50\":1,\"58\":4,\"85\":2}}],[\"folder\",{\"1\":{\"5\":1}}],[\"first\",{\"1\":{\"31\":1}}],[\"frontmatter\",{\"1\":{\"8\":1,\"11\":1,\"16\":4,\"31\":1,\"32\":1}}],[\"frozen\",{\"1\":{\"5\":1}}],[\"fetch\",{\"1\":{\"5\":1}}],[\"i代表行\",{\"1\":{\"58\":1}}],[\"ii\",{\"0\":{\"52\":1,\"53\":1},\"1\":{\"53\":1}}],[\"i++\",{\"1\":{\"46\":1,\"58\":1}}],[\"if\",{\"1\":{\"43\":1,\"50\":1,\"65\":2,\"66\":2,\"67\":2,\"75\":3,\"82\":3,\"83\":6,\"84\":4}}],[\"i\",{\"1\":{\"34\":1,\"39\":1,\"46\":5,\"58\":7,\"71\":1}}],[\"index\",{\"1\":{\"75\":5}}],[\"integer\",{\"1\":{\"43\":2}}],[\"int\",{\"1\":{\"43\":7,\"46\":5,\"50\":5,\"58\":10,\"65\":6,\"66\":6,\"67\":6,\"75\":7,\"82\":6,\"83\":6,\"84\":6}}],[\"in\",{\"1\":{\"31\":1}}],[\"install\",{\"1\":{\"5\":1}}],[\"ir⋯\",{\"1\":{\"23\":1}}],[\"it\",{\"1\":{\"17\":2}}],[\"is\",{\"1\":{\"2\":1}}],[\"|\",{\"1\":{\"5\":2}}],[\"安装依赖\",{\"1\":{\"5\":1}}],[\"val\",{\"1\":{\"46\":11,\"48\":1,\"50\":2}}],[\"value\",{\"1\":{\"43\":2}}],[\"vue\",{\"1\":{\"34\":2}}],[\"vuepress\",{\"0\":{\"18\":1},\"1\":{\"5\":2,\"14\":2,\"16\":2,\"17\":1,\"18\":2,\"19\":1,\"33\":1}}],[\"version\",{\"1\":{\"5\":1}}],[\"v4\",{\"1\":{\"5\":4}}],[\"j++\",{\"1\":{\"58\":1}}],[\"j\",{\"1\":{\"58\":7}}],[\"j代表列\",{\"1\":{\"58\":1}}],[\"java\",{\"1\":{\"43\":2,\"50\":2,\"58\":2,\"65\":1,\"75\":2}}],[\"jamesives\",{\"1\":{\"5\":1}}],[\"js\",{\"1\":{\"5\":1}}],[\"jobs\",{\"1\":{\"5\":1}}],[\"n−1\",{\"1\":{\"73\":1}}],[\"n2\",{\"1\":{\"58\":1,\"86\":1}}],[\"new\",{\"1\":{\"58\":1,\"75\":1}}],[\"num<=tar\",{\"1\":{\"56\":1}}],[\"num\",{\"1\":{\"48\":1,\"50\":3}}],[\"nums\",{\"1\":{\"39\":5,\"43\":4,\"46\":20,\"48\":2,\"50\":3,\"61\":8,\"63\":3,\"65\":4,\"66\":7,\"67\":4,\"71\":6,\"75\":17,\"82\":9,\"83\":15,\"84\":9}}],[\"numsr\",{\"1\":{\"39\":2}}],[\"numsl+1\",{\"1\":{\"39\":1}}],[\"numsl\",{\"1\":{\"39\":1}}],[\"n\",{\"1\":{\"39\":3,\"43\":5,\"50\":2,\"54\":7,\"56\":2,\"58\":8,\"61\":2,\"65\":1,\"71\":1,\"75\":2,\"80\":1,\"86\":1}}],[\"n个正整数的数组和一个正整数\",{\"1\":{\"39\":1}}],[\"not\",{\"1\":{\"88\":1}}],[\"nojekyll\",{\"1\":{\"5\":1}}],[\"node\",{\"1\":{\"5\":4}}],[\"name\",{\"1\":{\"5\":7}}],[\"top++\",{\"1\":{\"58\":1}}],[\"top==bottom\",{\"1\":{\"56\":1}}],[\"top\",{\"1\":{\"56\":1,\"58\":6}}],[\"toc\",{\"1\":{\"11\":1}}],[\"target\",{\"1\":{\"39\":5,\"43\":2,\"58\":2,\"61\":4,\"65\":3,\"66\":3,\"67\":3,\"82\":6,\"83\":14,\"84\":8}}],[\"title\",{\"1\":{\"31\":3}}],[\"the\",{\"1\":{\"31\":1}}],[\"this\",{\"1\":{\"2\":1}}],[\"tex\",{\"0\":{\"23\":1}}],[\"true\",{\"1\":{\"5\":1}}],[\"squares\",{\"1\":{\"70\":1}}],[\"search\",{\"1\":{\"60\":1,\"65\":1,\"66\":1,\"67\":1,\"84\":1}}],[\"setup\",{\"1\":{\"5\":2}}],[\"spiral\",{\"1\":{\"53\":1}}],[\"space\",{\"1\":{\"5\":1}}],[\"sortedsquares\",{\"1\":{\"75\":1}}],[\"sorted\",{\"1\":{\"70\":1}}],[\"sort\",{\"1\":{\"46\":1}}],[\"solution\",{\"1\":{\"43\":1,\"50\":1,\"58\":1,\"65\":1,\"75\":1}}],[\"start++\",{\"1\":{\"43\":1}}],[\"start\",{\"1\":{\"41\":2,\"42\":1,\"43\":5}}],[\"steps\",{\"1\":{\"5\":1}}],[\"sum\",{\"1\":{\"38\":1,\"41\":2,\"43\":4}}],[\"subarray\",{\"1\":{\"38\":1}}],[\"submodules\",{\"1\":{\"5\":1}}],[\"size\",{\"1\":{\"38\":1}}],[\"size=8192\",{\"1\":{\"5\":1}}],[\"src\",{\"1\":{\"5\":2}}],[\"while\",{\"1\":{\"43\":2,\"58\":1,\"65\":1,\"66\":1,\"67\":1,\"75\":1,\"82\":3,\"83\":2,\"84\":1}}],[\"will\",{\"1\":{\"31\":1}}],[\"with\",{\"1\":{\"5\":3}}],[\"write\",{\"1\":{\"5\":1}}],[\"uses\",{\"1\":{\"5\":4}}],[\"ubuntu\",{\"1\":{\"5\":1}}],[\"class\",{\"1\":{\"43\":1,\"50\":1,\"58\":1,\"65\":1,\"75\":1}}],[\"condition\",{\"1\":{\"82\":1}}],[\"contents\",{\"1\":{\"5\":1}}],[\"count++\",{\"1\":{\"58\":4}}],[\"count\",{\"1\":{\"58\":2}}],[\"code\",{\"1\":{\"43\":1,\"50\":1,\"58\":1,\"65\":1,\"75\":1}}],[\"corepack\",{\"1\":{\"5\":1}}],[\"cache\",{\"1\":{\"5\":1}}],[\"checkout\",{\"1\":{\"5\":2}}],[\"cn\",{\"1\":{\"5\":1,\"38\":1,\"45\":1,\"53\":1,\"60\":1,\"70\":1}}],[\"mid+\",{\"1\":{\"84\":1}}],[\"mid+1\",{\"1\":{\"82\":1}}],[\"mid−1\",{\"1\":{\"63\":1,\"82\":1}}],[\"mid\",{\"1\":{\"63\":6,\"65\":6,\"66\":8,\"67\":6,\"82\":12,\"83\":11,\"84\":10}}],[\"min\",{\"1\":{\"43\":1}}],[\"minsubarraylen\",{\"1\":{\"43\":1}}],[\"minimum\",{\"1\":{\"38\":1}}],[\"ms\",{\"1\":{\"32\":1}}],[\"more\",{\"1\":{\"30\":1}}],[\"md\",{\"1\":{\"19\":1}}],[\"matrix\",{\"1\":{\"53\":1,\"54\":1}}],[\"math\",{\"1\":{\"43\":1,\"75\":6}}],[\"markdown\",{\"0\":{\"14\":1,\"15\":1,\"16\":1,\"17\":1},\"1\":{\"14\":2,\"15\":3,\"16\":1,\"17\":3,\"18\":2,\"19\":1,\"31\":3,\"32\":1,\"33\":2,\"34\":2},\"2\":{\"29\":1}}],[\"max\",{\"1\":{\"5\":1,\"43\":2}}],[\"master\",{\"1\":{\"5\":2}}],[\"me\",{\"1\":{\"2\":1}}],[\"prevent\",{\"1\":{\"82\":1}}],[\"problems\",{\"1\":{\"38\":1,\"45\":1,\"53\":1,\"60\":1,\"70\":1}}],[\"public\",{\"1\":{\"33\":1,\"43\":1,\"50\":1,\"58\":1,\"65\":1,\"66\":1,\"67\":1,\"75\":1,\"82\":1,\"84\":1}}],[\"push\",{\"1\":{\"5\":1}}],[\"plugin\",{\"1\":{\"19\":1}}],[\"pnpm\",{\"1\":{\"5\":5}}],[\"permissions\",{\"1\":{\"5\":1}}],[\"pages\",{\"1\":{\"5\":4}}],[\"page\",{\"1\":{\"5\":1,\"31\":1}}],[\"部署文档\",{\"1\":{\"5\":3}}],[\"部署到\",{\"1\":{\"5\":1}}],[\"部署到ssh\",{\"1\":{\"5\":1}}],[\"generatematrix\",{\"1\":{\"58\":1}}],[\"git\",{\"1\":{\"5\":1}}],[\"github\",{\"1\":{\"5\":2}}],[\"gh\",{\"1\":{\"5\":3}}],[\"121\",{\"1\":{\"71\":1}}],[\"12\",{\"1\":{\"61\":2}}],[\"10\",{\"1\":{\"71\":4}}],[\"10000\",{\"1\":{\"61\":1}}],[\"100\",{\"1\":{\"46\":2,\"71\":3}}],[\"105\",{\"1\":{\"39\":2}}],[\"109\",{\"1\":{\"39\":1}}],[\"11\",{\"1\":{\"39\":1,\"71\":1}}],[\"19th\",{\"1\":{\"26\":1}}],[\"15\",{\"1\":{\"5\":1}}],[\"1\",{\"0\":{\"48\":1,\"82\":1},\"1\":{\"5\":1,\"21\":1,\"24\":1,\"32\":2,\"34\":2,\"39\":16,\"43\":3,\"46\":4,\"48\":2,\"50\":1,\"54\":6,\"58\":4,\"61\":7,\"65\":2,\"66\":2,\"67\":5,\"71\":6,\"75\":2,\"80\":1,\"82\":9,\"83\":7,\"84\":9}}],[\"16\",{\"1\":{\"5\":1,\"71\":3}}],[\"17\",{\"1\":{\"5\":1}}],[\"description\",{\"1\":{\"70\":1}}],[\"depth\",{\"1\":{\"5\":1}}],[\"deploy\",{\"1\":{\"5\":4}}],[\"dist\",{\"1\":{\"5\":2}}],[\"docs\",{\"1\":{\"5\":1}}],[\"doublew2w\",{\"1\":{\"5\":1}}],[\"域名解析\",{\"1\":{\"5\":1}}],[\"yml\",{\"1\":{\"5\":2}}],[\"完善\",{\"1\":{\"5\":2}}],[\"介绍\",{\"0\":{\"2\":1,\"15\":1},\"1\":{\"15\":1,\"16\":1}}],[\"档案主页\",{\"0\":{\"1\":1},\"1\":{\"2\":1}}],[\"项目主页配置\",{\"1\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
