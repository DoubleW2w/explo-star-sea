{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "DoubleW2w",
  "home_page_url": "https://doublew2w.cn/",
  "feed_url": "https://doublew2w.cn/feed.json",
  "description": "开源工具、效率方法、心理学探索的自我提升笔记，记录并输出一切能让自己提升的知识。",
  "items": [
    {
      "title": "主要功能与配置演示",
      "url": "https://doublew2w.cn/demo/",
      "id": "https://doublew2w.cn/demo/",
      "content_html": "",
      "date_published": "2024-06-28T11:45:01.000Z",
      "date_modified": "2024-06-28T11:45:01.000Z",
      "authors": [],
      "tags": [
        "使用指南"
      ]
    },
    {
      "title": "布局与功能禁用",
      "url": "https://doublew2w.cn/demo/disable.html",
      "id": "https://doublew2w.cn/demo/disable.html",
      "summary": "你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。",
      "content_html": "<p>你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。</p>\n<!-- more -->\n<p>本页面就是一个示例，禁用了如下功能:</p>\n<ul>\n<li>导航栏</li>\n<li>侧边栏</li>\n<li>路径导航</li>\n<li>页面信息</li>\n<li>贡献者</li>\n<li>编辑此页链接</li>\n<li>更新时间</li>\n<li>上一篇/下一篇 链接</li>\n<li>评论</li>\n<li>页脚</li>\n<li>返回顶部按钮</li>\n</ul>\n",
      "date_published": "2024-06-28T11:45:01.000Z",
      "date_modified": "2024-06-28T11:45:01.000Z",
      "authors": [],
      "tags": [
        "使用指南"
      ]
    },
    {
      "title": "布局",
      "url": "https://doublew2w.cn/demo/layout.html",
      "id": "https://doublew2w.cn/demo/layout.html",
      "summary": "布局包括: 导航栏 侧边栏 页脚 同时每个页面包含: 路径导航 标题和页面信息 TOC (文章标题列表) 贡献者、更新时间等页面元信息 评论 主题也带有以下元素: 夜间模式按钮 返回顶部按钮 打印按钮 你可以在主题选项和页面的 frontmatter 中自定义它们。",
      "content_html": "<p>布局包括:</p>\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/layout/navbar.html\" target=\"_blank\" rel=\"noopener noreferrer\">导航栏</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/layout/sidebar.html\" target=\"_blank\" rel=\"noopener noreferrer\">侧边栏</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/layout/footer.html\" target=\"_blank\" rel=\"noopener noreferrer\">页脚</a></li>\n</ul>\n<p>同时每个页面包含:</p>\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/layout/breadcrumb.html\" target=\"_blank\" rel=\"noopener noreferrer\">路径导航</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/feature/page-info.html\" target=\"_blank\" rel=\"noopener noreferrer\">标题和页面信息</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/layout/page.html#%E6%A0%87%E9%A2%98%E5%88%97%E8%A1%A8\" target=\"_blank\" rel=\"noopener noreferrer\">TOC (文章标题列表)</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/guide/feature/meta.html\" target=\"_blank\" rel=\"noopener noreferrer\">贡献者、更新时间等页面元信息</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/feature/comment.html\" target=\"_blank\" rel=\"noopener noreferrer\">评论</a></li>\n</ul>\n<p>主题也带有以下元素:</p>\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/interface/darkmode.html\" target=\"_blank\" rel=\"noopener noreferrer\">夜间模式按钮</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/guide/interface/others.html#%E8%BF%94%E5%9B%9E%E9%A1%B6%E9%83%A8%E6%8C%89%E9%92%AE\" target=\"_blank\" rel=\"noopener noreferrer\">返回顶部按钮</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/guide/interface/others.html#%E6%89%93%E5%8D%B0%E6%8C%89%E9%92%AE\" target=\"_blank\" rel=\"noopener noreferrer\">打印按钮</a></li>\n</ul>\n<p>你可以在主题选项和页面的 frontmatter 中自定义它们。</p>\n",
      "date_published": "2024-06-28T11:45:01.000Z",
      "date_modified": "2024-06-28T11:45:01.000Z",
      "authors": [],
      "tags": [
        "指南"
      ]
    },
    {
      "title": "Markdown 展示",
      "url": "https://doublew2w.cn/demo/markdown.html",
      "id": "https://doublew2w.cn/demo/markdown.html",
      "summary": "VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。 你需要创建并编写 Markdown，以便 VuePress 可以根据文件结构将它们转换为不同的页面。",
      "content_html": "<p>VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。</p>\n<p>你需要创建并编写 Markdown，以便 VuePress 可以根据文件结构将它们转换为不同的页面。</p>\n<!-- more -->\n<h2>Markdown 介绍</h2>\n<p>如果你是一个新手，还不会编写 Markdown，请先阅读 <a href=\"https://theme-hope.vuejs.press/zh/cookbook/markdown/\" target=\"_blank\" rel=\"noopener noreferrer\">Markdown 介绍</a> 和 <a href=\"https://theme-hope.vuejs.press/zh/cookbook/markdown/demo.html\" target=\"_blank\" rel=\"noopener noreferrer\">Markdown 演示</a>。</p>\n<h2>Markdown 配置</h2>\n<p>VuePress 通过 Frontmatter 为每个 Markdown 页面引入配置。</p>\n<div class=\"hint-container important\">\n<p class=\"hint-container-title\">Frontmatter</p>\n<p>Frontmatter 是 VuePress 中很重要的一个概念，请阅读 <a href=\"https://theme-hope.vuejs.press/zh/cookbook/vuepress/page.html#front-matter\" target=\"_blank\" rel=\"noopener noreferrer\">Frontmatter 介绍</a> 了解详情。</p>\n</div>\n<h2>Markdown 扩展</h2>\n<p>VuePress 会使用 <a href=\"https://github.com/markdown-it/markdown-it\" target=\"_blank\" rel=\"noopener noreferrer\">markdown-it</a> 来解析 Markdown 内容，因此可以借助于 markdown-it 插件来实现 <a href=\"https://github.com/markdown-it/markdown-it#syntax-extensions\" target=\"_blank\" rel=\"noopener noreferrer\">语法扩展</a> 。</p>\n<h3>VuePress 扩展</h3>\n<p>为了丰富文档写作，VuePress 对 Markdown 语法进行了扩展。</p>\n<p>关于这些扩展，请阅读 <a href=\"https://theme-hope.vuejs.press/zh/cookbook/vuepress/markdown.html\" target=\"_blank\" rel=\"noopener noreferrer\">VuePress 中的 Markdown 扩展</a>。</p>\n<h3>主题扩展</h3>\n<p>通过 <a href=\"https://plugin-md-enhance.vuejs.press/zh/\" target=\"_blank\" rel=\"noopener noreferrer\"><code>vuepress-plugin-md-enhance</code></a>，主题扩展了更多 Markdown 语法，提供更加丰富的写作功能。</p>\n<h4>选项卡</h4>\n\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/markdown/content/tabs.html\" target=\"_blank\" rel=\"noopener noreferrer\">查看详情</a></li>\n</ul>\n<h4>脚注</h4>\n<p>此文字有脚注<sup class=\"footnote-ref\"><a href=\"#footnote1\">[1]</a><a class=\"footnote-anchor\" id=\"footnote-ref1\"></a></sup><a class=\"footnote-anchor\" id=\"footnote-ref1\">.</a></p><a class=\"footnote-anchor\" id=\"footnote-ref1\">\n</a><ul><a class=\"footnote-anchor\" id=\"footnote-ref1\">\n</a><li><a class=\"footnote-anchor\" id=\"footnote-ref1\"></a><a href=\"https://theme-hope.vuejs.press/zh/guide/markdown/content/footnote.html\" target=\"_blank\" rel=\"noopener noreferrer\">查看详情</a></li>\n</ul>\n<h4>导入文件</h4>\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/markdown/content/include.html\" target=\"_blank\" rel=\"noopener noreferrer\">查看详情</a></li>\n</ul>\n<h4>TeX 语法</h4>\n<p v-pre=\"\" class=\"katex-block\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><msup><mi mathvariant=\"normal\">∂</mi><mi>r</mi></msup><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>ω</mi><mi>r</mi></msup></mrow></mfrac><mrow><mo fence=\"true\">(</mo><mfrac><msup><mi>y</mi><mi>ω</mi></msup><mi>ω</mi></mfrac><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><mfrac><msup><mi>y</mi><mi>ω</mi></msup><mi>ω</mi></mfrac><mo fence=\"true\">)</mo></mrow><mrow><mo fence=\"true\">{</mo><mo stretchy=\"false\">(</mo><mi>log</mi><mo>⁡</mo><mi>y</mi><msup><mo stretchy=\"false\">)</mo><mi>r</mi></msup><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>r</mi></munderover><mfrac><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mi>i</mi></msup><mi>r</mi><mo>⋯</mo><mo stretchy=\"false\">(</mo><mi>r</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>log</mi><mo>⁡</mo><mi>y</mi><msup><mo stretchy=\"false\">)</mo><mrow><mi>r</mi><mo>−</mo><mi>i</mi></mrow></msup></mrow><msup><mi>ω</mi><mi>i</mi></msup></mfrac><mo fence=\"true\">}</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\n\\frac {\\partial^r} {\\partial \\omega^r} \\left(\\frac {y^{\\omega}} {\\omega}\\right)\n= \\left(\\frac {y^{\\omega}} {\\omega}\\right) \\left\\{(\\log y)^r + \\sum_{i=1}^r \\frac {(-1)^i r \\cdots (r-i+1) (\\log y)^{r-i}} {\\omega^i} \\right\\}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.4em;vertical-align:-0.95em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3414em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">ω</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0277em;vertical-align:-1.2777em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3414em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">ω</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mopen\">(</span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5017em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7507em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">}</span></span></span></span></span></span></span></p>\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/markdown/grammar/tex.html\" target=\"_blank\" rel=\"noopener noreferrer\">查看详情</a></li>\n</ul>\n<h4>任务列表</h4>\n<ul class=\"task-list-container\">\n<li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" id=\"task-item-0\" checked=\"checked\" disabled=\"disabled\"><label class=\"task-list-item-label\" for=\"task-item-0\"> 计划 1</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" id=\"task-item-1\" disabled=\"disabled\"><label class=\"task-list-item-label\" for=\"task-item-1\"> 计划 2</label></li>\n</ul>\n<p><a href=\"https://theme-hope.vuejs.press/zh/guide/markdown/grammar/tasklist.html\" target=\"_blank\" rel=\"noopener noreferrer\">查看详情</a></p>\n<h3>图片增强</h3>\n<p>支持为图片设置颜色模式和大小。</p>\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/markdown/grammar/image.html\" target=\"_blank\" rel=\"noopener noreferrer\">查看详情</a></li>\n</ul>\n<h4>上下角标</h4>\n<p>19<sup>th</sup> H<sub>2</sub>O</p>\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/markdown/grammar/sup-sub.html\" target=\"_blank\" rel=\"noopener noreferrer\">查看详情</a></li>\n</ul>\n<h4>组件</h4>\n",
      "date_published": "2024-06-28T11:45:01.000Z",
      "date_modified": "2024-06-28T11:45:01.000Z",
      "authors": [],
      "tags": [
        "使用指南"
      ]
    },
    {
      "title": "1-两数之和",
      "url": "https://doublew2w.cn/leetcode/1-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C.html",
      "id": "https://doublew2w.cn/leetcode/1-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C.html",
      "summary": "题目地址(1. 两数之和 - 力扣（LeetCode）) https://leetcode.cn/problems/two-sum/ 题目描述 给定一个整数数组 nums 和一个整数目标值 target ，请你在该数组中找出 和为目标值 target 的那 两个 整数，并返回它们的数组下标。 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在...",
      "content_html": "<h2>题目地址(1. 两数之和 - 力扣（LeetCode）)</h2>\n<p><a href=\"https://leetcode.cn/problems/two-sum/\" target=\"_blank\" rel=\"noopener noreferrer\">https://leetcode.cn/problems/two-sum/</a></p>\n<h2>题目描述</h2>\n<p> 给定一个整数数组 <code> nums </code>&nbsp; 和一个整数目标值 <code> target </code>，请你在该数组中找出 <strong> 和为目标值 </strong> <em> <code> target </code> </em>&nbsp; 的那&nbsp; <strong> 两个 </strong>&nbsp; 整数，并返回它们的数组下标。</p>\n<p> 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p>\n<p> 你可以按任意顺序返回答案。</p>\n<p>&nbsp; </p>\n<p> <strong class=\"example\"> 示例 1：</strong> </p>\n<pre> <strong> 输入：</strong> nums = [2,7,11,15], target = 9\n<strong> 输出：</strong> [0,1]\n<strong> 解释：</strong> 因为 nums [0] + nums [1] == 9 ，返回 [0, 1] 。\n</pre>\n<p> <strong class=\"example\"> 示例 2：</strong> </p>\n<pre> <strong> 输入：</strong> nums = [3,2,4], target = 6\n<strong> 输出：</strong> [1,2]\n</pre>\n<p> <strong class=\"example\"> 示例 3：</strong> </p>\n<pre> <strong> 输入：</strong> nums = [3,3], target = 6\n<strong> 输出：</strong> [0,1]\n</pre>\n<p>&nbsp; </p>\n<p> <strong> 提示：</strong> </p>\n<ul>\n\t<li> <code> 2 &lt;= nums.length &lt;= 10 <sup> 4 </sup> </code> </li>\n\t<li> <code>-10 <sup> 9 </sup> &lt;= nums [i] &lt;= 10 <sup> 9 </sup> </code> </li>\n\t<li> <code>-10 <sup> 9 </sup> &lt;= target &lt;= 10 <sup> 9 </sup> </code> </li>\n\t<li> <strong> 只会存在一个有效答案 </strong> </li>\n</ul>\n<p>&nbsp; </p>\n<p> <strong> 进阶：</strong> 你可以想出一个时间复杂度小于 <code> O(n <sup> 2 </sup>)</code> 的算法吗？</p>\n<h2>前置知识</h2>\n<ul>\n<li>哈希表</li>\n</ul>\n<h2>思路</h2>\n<p>创建一个哈希表，对于每个 <code>x</code>，通过查询 <code>target - x</code> 是否存在于哈希表中</p>\n<ul>\n<li>不存在，则将 <code>x</code> 插入哈希表</li>\n<li>存在，<code>x</code> 的下标与 <code>target-x</code> 的下标就是答案</li>\n</ul>\n<blockquote>\n<p>如果有 3 个或者以上的重复元素，代表这个重复元素不可能是解</p>\n<p>如果只有两个重复元素，同样的道理，假如这个重复元素是解，那么必定是两个重复元素的和等于 target。</p>\n</blockquote>\n<h2>关键点</h2>\n<ul>\n<li>每种输入只会对应一个答案</li>\n<li>哈希表存储的 key 是 <code>x</code> 和 <code>target - x</code></li>\n</ul>\n<h2>代码</h2>\n<ul>\n<li>语言支持：Java</li>\n</ul>\n<p>Java Code:</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes github-light one-dark-pro vp-code\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#E5C07B\"> Solution</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#61AFEF\">[] </span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">twoSum</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">nums</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> target</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">        Map</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&gt; </span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\">map</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> HashMap</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; i </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> nums</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">length</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> first</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">  target </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[i];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">map</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">containsKey</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(first)) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> firstIndex</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">  map</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(target </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[i]);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                return</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">[]{firstIndex, i};</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">            map</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">put</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(nums[i], i);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>复杂度分析</strong></p>\n<p>令 n 为数组长度。</p>\n<ul>\n<li>时间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>空间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>，哈希表存储元素的开销</li>\n</ul>\n",
      "date_published": "2024-06-28T00:00:00.000Z",
      "date_modified": "2024-06-28T11:45:01.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "15-三数之和",
      "url": "https://doublew2w.cn/leetcode/15-3sum.html",
      "id": "https://doublew2w.cn/leetcode/15-3sum.html",
      "summary": "题目地址(15. 三数之和 - 力扣（LeetCode）) https://leetcode.cn/problems/3sum/description/ 题目描述 给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums [j], nums [k]] 满足 i != j 、 i != k 且 j != k ，同时还满足 nums ...",
      "content_html": "<h2>题目地址(15. 三数之和 - 力扣（LeetCode）)</h2>\n<p><a href=\"https://leetcode.cn/problems/3sum/description/\" target=\"_blank\" rel=\"noopener noreferrer\">https://leetcode.cn/problems/3sum/description/</a></p>\n<h2>题目描述</h2>\n<p> 给你一个整数数组 <code> nums </code> ，判断是否存在三元组 <code> [nums[i], nums [j], nums [k]]</code> 满足 <code> i != j </code>、<code> i != k </code> 且 <code> j != k </code> ，同时还满足 <code> nums [i] + nums [j] + nums [k] == 0 </code> 。请 </p>\n<p> 你返回所有和为 <code> 0 </code> 且不重复的三元组。</p>\n<p> <strong> 注意：</strong> 答案中不可以包含重复的三元组。</p>\n<p>&nbsp; </p>\n<p>&nbsp; </p>\n<p> <strong> 示例 1：</strong> </p>\n<pre> <strong> 输入：</strong> nums = [-1,0,1,2,-1,-4]\n<strong> 输出：</strong> [[-1,-1,2], [-1,0,1]]\n<strong> 解释：</strong>\nnums [0] + nums [1] + nums [2] = (-1) + 0 + 1 = 0 。\nnums [1] + nums [2] + nums [4] = 0 + 1 + (-1) = 0 。\nnums [0] + nums [3] + nums [4] = (-1) + 2 + (-1) = 0 。\n不同的三元组是 [-1,0,1] 和 [-1,-1,2] 。\n注意，输出的顺序和三元组的顺序并不重要。\n</pre>\n<p> <strong> 示例 2：</strong> </p>\n<pre> <strong> 输入：</strong> nums = [0,1,1]\n<strong> 输出：</strong> []\n<strong> 解释：</strong> 唯一可能的三元组和不为 0 。\n</pre>\n<p> <strong> 示例 3：</strong> </p>\n<pre> <strong> 输入：</strong> nums = [0,0,0]\n<strong> 输出：</strong> [[0,0,0]]\n<strong> 解释：</strong> 唯一可能的三元组和为 0 。\n</pre>\n<p>&nbsp; </p>\n<p> <strong> 提示：</strong> </p>\n<ul>\n\t<li> <code> 3 &lt;= nums.length &lt;= 3000 </code> </li>\n\t<li> <code>-10 <sup> 5 </sup> &lt;= nums [i] &lt;= 10 <sup> 5 </sup> </code> </li>\n</ul>\n<h2>前置知识</h2>\n<ul>\n<li>双指针</li>\n</ul>\n<h2>思路：排序+双指针</h2>\n<p>如果使用「暴力枚举」的方式，时间复杂度为 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>, 最后还要通过哈希表进行去重。</p>\n<p>为了「不重复」，我们先要排序。<strong>这样就能保证我们每一层循环都可以过滤掉相同的元素，而且能快速做出剪枝</strong></p>\n<p>排序的时间复杂度为 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(nlogn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>在固定两个元素的情况下，第三个元素会导致和为 <code>&lt;0</code> <code>&gt;0</code> <code>=0</code>。而两个元素的交替移动也能达到这个效果。</p>\n<p>定义三个指针 <code>k</code>, <code>i</code>, <code>j</code>，其中 <code>k</code> 指向最左的元素，双指针 <code>i</code>, <code>j</code> 分别在数组索引（k, length(nums)）处, 双指针 i , j 交替向中间移动，记录对于每个固定指针 k 的所有满足 nums [k] + nums [i] + nums [j] == 0 的 i, j 组合：</p>\n<ul>\n<li>如果 <code>nums[k] &gt; 0</code> ，而 <code>nums[k]</code> 又是最小，所以和肯定 &gt; 0，终止循环</li>\n<li>如果 <code>nums[k] == nums[k-1]</code> 有可能是重复答案，处理一次即可</li>\n<li>双指针 i, j 变动情况：\n<ul>\n<li>如果和 <strong>&lt; 0</strong>, 说明 i 需要往 <strong>右边</strong> 移动，移动的时候要注意处理相同元素情况</li>\n<li>如果和 <strong>&gt; 0</strong>, 说明 j 需要往 <strong>左边</strong> 移动，移动的时候要注意处理相同元素情况</li>\n<li>如果和 <strong>= 0</strong>, i 和 j 同时往中间移动的时候处理相同元素的情况</li>\n</ul>\n</li>\n</ul>\n<h2>关键点</h2>\n<ul>\n<li>为了 “不可以包含重复的三元组”，通过排序容易找到相同的三元组答案。</li>\n<li>为了更有效的找到有效解，双指针「交替向中间移动」</li>\n</ul>\n<h2>代码</h2>\n<ul>\n<li>语言支持：Java</li>\n</ul>\n<p>Java Code:</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes github-light one-dark-pro vp-code\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#E5C07B\"> Solution</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> List</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">List</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&gt;&gt;</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> threeSum</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">nums</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 三重循环枚举，不重复则需要</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 第二重循环枚举到的元素不小于当前第一重循环枚举到的元素；</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 第三重循环枚举到的元素不小于当前第二重循环枚举到的元素；</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 因此需要先排序。</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 双指针为什么要交替移动，往中间靠拢</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 在固定两重循环元素的情况，第三个元素导致的三数之和有可能导致 &gt; 0 ,= 0 &lt; 0，也有可能 = 0（重复答案）</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 而 &lt; 0 时，第二个枚举元素的下标要右边移动，增大总和</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 而 &gt; 0 时，只能让第三个枚举元素的下标向左移动，减小总和</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // = 0，就是当前答案，随后继续交替移动，排除重复答案、</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">        List</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">List</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&gt;&gt; </span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\">res</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> ArrayList</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(nums </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> ||</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> nums</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">length</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> &lt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            return</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> res;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">        Arrays</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">sort</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(nums);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> k</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;k </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> nums</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">length</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; k</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(nums[k] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">break</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">// 此时剩余两个元素都 &gt; 0，往后的查找不满足。</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(k </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> &amp;&amp;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[k] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[k </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">]) </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">continue</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">// 找到重复答案（题目要求不重复）</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> k </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">,j </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> nums</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">length</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> -</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            while</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(i </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> j){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> sum</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[k] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[i] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[j];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(sum </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                    while</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(i </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> j </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&amp;&amp;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[i] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">i]); </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">// 不判断相同元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">                }</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(sum </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                    while</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(i </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> j </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&amp;&amp;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[j] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">j]); </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">// 不判断相同元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">                }</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(sum </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">                    res</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> ArrayList</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&gt;(</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">Arrays</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">asList</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(nums[k],nums[i],nums[j])));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                    while</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(i </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> j </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&amp;&amp;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[i] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">i]); </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">// 不判断相同答案的元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                    while</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(i </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> j </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&amp;&amp;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[j] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">j]); </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">// 不判断相同答案的元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> res;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>复杂度分析</strong></p>\n<p>令 n 为数组长度。</p>\n<ul>\n<li>时间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，排序的时间复杂度为 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(nlogn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>。双重循环的时间复杂度为 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n<li>空间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>，指针使用常数大小的额外空间，忽略答案的存储空间。</li>\n</ul>\n",
      "date_published": "2024-06-28T00:00:00.000Z",
      "date_modified": "2024-06-28T11:45:01.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "18-四数之和",
      "url": "https://doublew2w.cn/leetcode/18-4sum.html",
      "id": "https://doublew2w.cn/leetcode/18-4sum.html",
      "summary": "题目地址(18. 四数之和 - 力扣（LeetCode）) https://leetcode.cn/problems/4sum/description/ 题目描述 给你一个由 n 个整数组成的数组 nums ，和一个目标值 target 。请你找出并返回满足下述全部条件且不重复的四元组 [nums[a], nums[b], nums[c], nums[...",
      "content_html": "<h2>题目地址(18. 四数之和 - 力扣（LeetCode）)</h2>\n<p><a href=\"https://leetcode.cn/problems/4sum/description/\" target=\"_blank\" rel=\"noopener noreferrer\">https://leetcode.cn/problems/4sum/description/</a></p>\n<h2>题目描述</h2>\n<p>给你一个由 <code>n</code> 个整数组成的数组&nbsp;<code>nums</code> ，和一个目标值 <code>target</code> 。请你找出并返回满足下述全部条件且<strong>不重复</strong>的四元组&nbsp;<code>[nums[a], nums[b], nums[c], nums[d]]</code>&nbsp;（若两个四元组元素一一对应，则认为两个四元组重复）：</p>\n<ul>\n\t<li><code>0 &lt;= a, b, c, d&nbsp;&lt; n</code></li>\n\t<li><code>a</code>、<code>b</code>、<code>c</code> 和 <code>d</code> <strong>互不相同</strong></li>\n\t<li><code>nums[a] + nums[b] + nums[c] + nums[d] == target</code></li>\n</ul>\n<p>你可以按 <strong>任意顺序</strong> 返回答案 。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre><strong>输入：</strong>nums = [1,0,-1,0,-2,2], target = 0\n<strong>输出：</strong>[[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre><strong>输入：</strong>nums = [2,2,2,2,2], target = 8\n<strong>输出：</strong>[[2,2,2,2]]\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 200</code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li>\n</ul>\n<h2>前置知识</h2>\n<ul>\n<li>哈希表</li>\n<li>三数之和</li>\n</ul>\n<h2>思路</h2>\n<p>本题与「<a href=\"./15-3sum\">15. 三数之和</a>」相似，解法也相似。</p>\n<p>为了避免枚举到重复四元组，则需要保证每一重循环枚举到的元素不小于其上一重循环枚举到的元素，且在同一重循环中不能多次枚举到相同的元素。因此我们需要「排序」。</p>\n<p>使用两重循环分别枚举前两个数，然后在两重循环枚举到的数之后使用双指针枚举剩下的两个数。</p>\n<h2>关键点</h2>\n<ul>\n<li>\n<p>排序解决重复问题</p>\n</li>\n<li>\n<p>使用两重循环分别枚举前两个数，然后在两重循环枚举到的数之后使用双指针枚举剩下的两个数。</p>\n</li>\n</ul>\n<h2>代码</h2>\n<ul>\n<li>语言支持：Java</li>\n</ul>\n<p>Java Code:</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes github-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#E5C07B\"> Solution</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> List</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">List</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&gt;&gt;</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> fourSum</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">nums</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> target</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">        Arrays</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">sort</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(nums);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">        List</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">List</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&gt;&gt; </span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\">ans</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> ArrayList</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> n</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> nums</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">length</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 枚举第一个数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> a</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; a </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 3</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; a</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            long</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> x</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[a];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">            // 跳过重复数字</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (a </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> &amp;&amp;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> x </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[a </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">]) </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">continue</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (x </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[a </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[a </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[a </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 3</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> target) </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">break</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (x </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 3</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> target) </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">continue</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">            // 枚举第二个数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            for</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> b</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> a </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; b </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; b</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                long</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> y</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[b];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (b </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> a </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> &amp;&amp;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> y </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[b </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">]) </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">continue</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (x </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> y </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[b </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[b </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> target) </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">break</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (x </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> y </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> target) </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">continue</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> l</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> b </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">, r </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                while</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (l </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> r) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                    long</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> sum</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> x </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> y </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[l] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[r];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                    if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (sum </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> target) r</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                    else</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (sum </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> target) l</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                    else</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">                        // sum == target</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">                        ans</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">Arrays</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">asList</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">((</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">)x, (</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">)y, nums[l], nums[r]));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">                        l</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                        while</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (l </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> r </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&amp;&amp;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[l] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[l </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">]) l</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">                        r</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                        while</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (l </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> r </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&amp;&amp;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[r] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[r </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">]) r</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">                    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> ans;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>复杂度分析</strong></p>\n<p>令 n 为数组长度。</p>\n<ul>\n<li>时间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，排序的时间复杂度是 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(nlogn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>，枚举四元组的时间复杂度是 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，因此总时间复杂度为 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo>+</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^3+nlogn)=O(n^3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</li>\n<li>空间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>，空间复杂度主要取决于排序额外使用的空间。可以看成使用了一个额外的数组存储了数组 nums 的副本并排序，空间复杂度为 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>。</li>\n</ul>\n",
      "date_published": "2024-06-28T00:00:00.000Z",
      "date_modified": "2024-06-28T11:45:01.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "202-快乐数",
      "url": "https://doublew2w.cn/leetcode/202-%E5%BF%AB%E4%B9%90%E6%95%B0.html",
      "id": "https://doublew2w.cn/leetcode/202-%E5%BF%AB%E4%B9%90%E6%95%B0.html",
      "summary": "题目地址(202. 快乐数 - 力扣（LeetCode）) https://leetcode.cn/problems/happy-number/ 题目描述 编写一个算法来判断一个数 n 是不是快乐数。 「快乐数」 定义为： 对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和。 然后重复这个过程直到这个数变为 1，也可能是 无限循环 但始终变不...",
      "content_html": "<h2>题目地址(202. 快乐数 - 力扣（LeetCode）)</h2>\n<p><a href=\"https://leetcode.cn/problems/happy-number/\" target=\"_blank\" rel=\"noopener noreferrer\">https://leetcode.cn/problems/happy-number/</a></p>\n<h2>题目描述</h2>\n<p>编写一个算法来判断一个数 <code>n</code> 是不是快乐数。</p>\n<p><strong>「快乐数」</strong>&nbsp;定义为：</p>\n<ul>\n\t<li>对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和。</li>\n\t<li>然后重复这个过程直到这个数变为 1，也可能是 <strong>无限循环</strong> 但始终变不到 1。</li>\n\t<li>如果这个过程 <strong>结果为</strong>&nbsp;1，那么这个数就是快乐数。</li>\n</ul>\n<p>如果 <code>n</code> 是 <em>快乐数</em> 就返回 <code>true</code> ；不是，则返回 <code>false</code> 。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre><strong>输入：</strong>n = 19\n<strong>输出：</strong>true\n<strong>解释：\n</strong>1<sup>2</sup> + 9<sup>2</sup> = 82\n8<sup>2</sup> + 2<sup>2</sup> = 68\n6<sup>2</sup> + 8<sup>2</sup> = 100\n1<sup>2</sup> + 0<sup>2</sup> + 0<sup>2</sup> = 1\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre><strong>输入：</strong>n = 2\n<strong>输出：</strong>false\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n<h2>前置知识</h2>\n<ul>\n<li>哈希表</li>\n</ul>\n<h2>思路</h2>\n<p>通过反复调用 <code>getNext(n)</code> 得到的链是一个隐式的链表。链中的所有其他数字都是节点。那问题就直接转换为「检测一个链表是否有环。」</p>\n<p>定义两个指针slow和fast，slow在链表中前进 1 个节点，fast在链表前进 2 个节点（对 <code>getNext(n)</code> 函数的嵌套调用）。</p>\n<ul>\n<li>如果 <code>n</code> 是快乐数，则就说明没有循环，fast 会先到 “1”</li>\n<li>如果 <code>n</code> 不是快乐数，fast 和 slow 一定会在循环中。</li>\n</ul>\n<h2>关键点</h2>\n<ul>\n<li>将”快乐数“操作视为寻找下一个数，即看成一个链表</li>\n</ul>\n<h2>代码</h2>\n<ul>\n<li>语言支持：Java</li>\n</ul>\n<p>Java Code:</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes github-light one-dark-pro vp-code\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#E5C07B\"> Solution</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">    // 对于一个三位数来说，最大的平方和为 9^2+9^2+9^2 = 243</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">    // 对于一个四位数来说，最大的平方和为 81 + 81 + 81 + 81 = 324</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">    // 在继续往下后，4位数只会降到3位数，而不会无穷大</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> getNext</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> n</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> totalSum</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 计算每一位的平方和</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        while</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> d</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">%</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 10</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">/</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 10</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            totalSum </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> d </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">*</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> d;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> totalSum;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> boolean</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> isHappy</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> n</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> slowRunner</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> n;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> fastRunner</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> getNext</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(n);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(fastRunner </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            return</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 快慢指针，不是快乐数，那么存在一个环使得算法无限循环</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 在环中它们由于步速不一致，会相遇</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 如果相遇，则说明不是快乐数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 如果是快乐数，最后会返回1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        while</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (slowRunner </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> fastRunner) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">            // slow 走一步, fast 走两步</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            slowRunner </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> getNext</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(slowRunner);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            fastRunner </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> getNext</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(fastRunner);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            fastRunner </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> getNext</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(fastRunner);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> fastRunner </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>复杂度分析</strong></p>\n<ul>\n<li>\n<p>时间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></p>\n<ul>\n<li>如果没有循环，那么fast将先到达 1，slow将到达链表中的一半。成本是 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo>⋅</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(2⋅logn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>=<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(logn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>一旦两个指针都在循环中，假设循环中有 k 个数字。如果他们的起点是相隔 k−1 的位置（这是他们可以开始的最远的距离），那么快跑者需要 k−1 步才能到达慢跑者，主操作不变，所以也是 O(logn)。</li>\n</ul>\n</li>\n<li>\n<p>空间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></p>\n</li>\n</ul>\n",
      "date_published": "2024-06-28T00:00:00.000Z",
      "date_modified": "2024-06-28T11:45:01.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "383-赎金信",
      "url": "https://doublew2w.cn/leetcode/383-ransom-note.html",
      "id": "https://doublew2w.cn/leetcode/383-ransom-note.html",
      "summary": "题目地址(383. 赎金信 - 力扣（LeetCode）) https://leetcode.cn/problems/ransom-note/description/ 题目描述 给你两个字符串： ransomNote 和 magazine ，判断 ransomNote 能不能由 magazine 里面的字符构成。 如果可以，返回 true ；否则返回 ...",
      "content_html": "<h2>题目地址(383. 赎金信 - 力扣（LeetCode）)</h2>\n<p><a href=\"https://leetcode.cn/problems/ransom-note/description/\" target=\"_blank\" rel=\"noopener noreferrer\">https://leetcode.cn/problems/ransom-note/description/</a></p>\n<h2>题目描述</h2>\n<p> 给你两个字符串：<code> ransomNote </code> 和 <code> magazine </code> ，判断 <code> ransomNote </code> 能不能由 <code> magazine </code> 里面的字符构成。</p>\n<p> 如果可以，返回 <code> true </code> ；否则返回 <code> false </code> 。</p>\n<p> <code> magazine </code> 中的每个字符只能在 <code> ransomNote </code> 中使用一次。</p>\n<p>&nbsp; </p>\n<p> <strong> 示例 1：</strong> </p>\n<pre> <strong> 输入：</strong> ransomNote = \"a\", magazine = \"b\"\n<strong> 输出：</strong> false\n</pre>\n<p> <strong> 示例 2：</strong> </p>\n<pre> <strong> 输入：</strong> ransomNote = \"aa\", magazine = \"ab\"\n<strong> 输出：</strong> false\n</pre>\n<p> <strong> 示例 3：</strong> </p>\n<pre> <strong> 输入：</strong> ransomNote = \"aa\", magazine = \"aab\"\n<strong> 输出：</strong> true\n</pre>\n<p>&nbsp; </p>\n<p> <strong> 提示：</strong> </p>\n<ul>\n\t<li> <code> 1 &lt;= ransomNote.length, magazine.length &lt;= 10 <sup> 5 </sup> </code> </li>\n\t<li> <code> ransomNote </code> 和 <code> magazine </code> 由小写英文字母组成 </li>\n</ul>\n<h2>前置知识</h2>\n<ul>\n<li>哈希表</li>\n</ul>\n<h2>思路</h2>\n<ul>\n<li>如果两个字符串的长度不相等，则不是正确答案。</li>\n<li>如果 <code>ransomNote</code> 存在 <code>magazine</code> 没有的字母，则不是正确答案。</li>\n<li>定义一个长度为 26 的数组存放 <code>magazine</code> 不同字母的个数。\n<ul>\n<li>记录 <code>ransomNote</code> 每个字符的情况</li>\n<li>如果某个字符数量检查情况中，出现数量 &lt; 0，说明 <code>ransomNote</code> 针对该字母的数量比 <code>magazine</code> 多，也不是正确答案</li>\n</ul>\n</li>\n</ul>\n<h2>关键点</h2>\n<ul>\n<li>字母总数为 26 个</li>\n<li>哈希表计数或者数组计数</li>\n</ul>\n<p>同样的题目还有 242-有效的字母异位词</p>\n<h2>代码</h2>\n<ul>\n<li>语言支持：Java</li>\n</ul>\n<p>Java Code:</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes github-light one-dark-pro vp-code\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#E5C07B\"> Solution</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> boolean</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> canConstruct</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> ransomNote</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> magazine</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">ransomNote</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">length</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">() </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> magazine</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">length</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">()) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            return</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> false</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\">cnt</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\">26</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">char</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> c</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> :</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> magazine</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">toCharArray</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">()) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            cnt[c </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#032F62;--shiki-dark:#98C379\"> 'a'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">]</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">char</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> c</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> :</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> ransomNote</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">toCharArray</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">()) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            cnt[c </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#032F62;--shiki-dark:#98C379\"> 'a'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">]</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (cnt[c </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#032F62;--shiki-dark:#98C379\"> 'a'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                return</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> false</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>复杂度分析</strong></p>\n<p>令 n 为字符串长度。</p>\n<ul>\n<li>时间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>，遍历字符串所需要的时间复杂度</li>\n<li>空间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(S)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span></span></span></span>,定义存储的数组，固定长度，|S| &lt;= 26;</li>\n</ul>\n",
      "date_published": "2024-06-28T00:00:00.000Z",
      "date_modified": "2024-06-28T11:45:01.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "454-四数相加 ii",
      "url": "https://doublew2w.cn/leetcode/454-4sum-ii.html",
      "id": "https://doublew2w.cn/leetcode/454-4sum-ii.html",
      "summary": "题目地址(454. 四数相加 II - 力扣（LeetCode）) https://leetcode.cn/problems/4sum-ii/description/ 题目描述 给你四个整数数组 nums1 、 nums2 、 nums3 和 nums4 ，数组长度都是 n ，请你计算有多少个元组 (i, j, k, l) 能满足： 0 <= i, j...",
      "content_html": "<h2>题目地址(454. 四数相加 II - 力扣（LeetCode）)</h2>\n<p><a href=\"https://leetcode.cn/problems/4sum-ii/description/\" target=\"_blank\" rel=\"noopener noreferrer\">https://leetcode.cn/problems/4sum-ii/description/</a></p>\n<h2>题目描述</h2>\n<p> 给你四个整数数组 <code> nums1 </code>、<code> nums2 </code>、<code> nums3 </code> 和 <code> nums4 </code> ，数组长度都是 <code> n </code> ，请你计算有多少个元组 <code>(i, j, k, l)</code> 能满足：</p>\n<ul>\n\t<li> <code> 0 &lt;= i, j, k, l &lt; n </code> </li>\n\t<li> <code> nums1 [i] + nums2 [j] + nums3 [k] + nums4 [l] == 0 </code> </li>\n</ul>\n<p>&nbsp; </p>\n<p> <strong> 示例 1：</strong> </p>\n<pre> <strong> 输入：</strong> nums1 = [1,2], nums2 = [-2,-1], nums3 = [-1,2], nums4 = [0,2]\n<strong> 输出：</strong> 2\n<strong> 解释：</strong>\n两个元组如下：\n1. (0, 0, 0, 1) -&gt; nums1 [0] + nums2 [0] + nums3 [0] + nums4 [1] = 1 + (-2) + (-1) + 2 = 0\n2. (1, 1, 0, 0) -&gt; nums1 [1] + nums2 [1] + nums3 [0] + nums4 [0] = 2 + (-1) + (-1) + 0 = 0\n</pre>\n<p> <strong> 示例 2：</strong> </p>\n<pre> <strong> 输入：</strong> nums1 = [0], nums2 = [0], nums3 = [0], nums4 = [0]\n<strong> 输出：</strong> 1\n</pre>\n<p>&nbsp; </p>\n<p>&nbsp; <strong> 提示：</strong> </p>\n<ul>\n\t<li> <code> n == nums1.length </code> </li>\n\t<li> <code> n == nums2.length </code> </li>\n\t<li> <code> n == nums3.length </code> </li>\n\t<li> <code> n == nums4.length </code> </li>\n\t<li> <code> 1 &lt;= n &lt;= 200 </code> </li>\n\t<li> <code>-2 <sup> 28 </sup> &lt;= nums1 [i], nums2 [i], nums3 [i], nums4 [i] &lt;= 2 <sup> 28 </sup> </code> </li>\n</ul>\n<h2>前置知识</h2>\n<ul>\n<li>两数之和思路</li>\n</ul>\n<h2>思路</h2>\n<p>使用一个哈希表map存储 A 和 B 所有和sumAB的情况，其中 key 是和，value是和出现的次数</p>\n<p>使用同样的遍历方式，遍历 C + D，找到map是否存在  −(sumCD)。</p>\n<p>将 −(sumCD) 对应的值累加起来，就是答案。</p>\n<h2>代码</h2>\n<ul>\n<li>语言支持：Java</li>\n</ul>\n<p>Java Code:</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes github-light one-dark-pro vp-code\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#E5C07B\"> Solution</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> fourSumCount</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">A</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">B</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">C</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">D</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">        Map</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&gt; </span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\">countAB</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> HashMap</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&gt;();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> u</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> :</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> A) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            for</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> v</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> :</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> B) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">                countAB</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">put</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(u </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> v, </span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">countAB</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">getOrDefault</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(u </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> v, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> ans</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> u</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> :</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> C) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            for</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> v</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> :</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> D) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">countAB</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">containsKey</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">u </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> v)) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">                    ans </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> countAB</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">u </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> v);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> ans;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>复杂度分析</strong></p>\n<p>令 n 为数组长度。</p>\n<ul>\n<li>时间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>：使用双重循环进行遍历求和，其中哈希表操作都是 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>空间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>：哈希表所用的空间，最坏情况下，A 和 B 数组中每个元素之和都不相同。</li>\n</ul>\n",
      "date_published": "2024-06-28T00:00:00.000Z",
      "date_modified": "2024-06-28T11:45:01.000Z",
      "authors": [],
      "tags": []
    }
  ]
}