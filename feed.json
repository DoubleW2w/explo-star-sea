{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "DoubleW2w",
  "home_page_url": "https://doublew2w.cn/",
  "feed_url": "https://doublew2w.cn/feed.json",
  "description": "开源工具、效率方法、心理学探索的自我提升笔记，记录并输出一切能让自己提升的知识。",
  "items": [
    {
      "title": "主要功能与配置演示",
      "url": "https://doublew2w.cn/demo/",
      "id": "https://doublew2w.cn/demo/",
      "content_html": "",
      "date_published": "2024-06-27T17:51:53.000Z",
      "date_modified": "2024-06-27T17:51:53.000Z",
      "authors": [],
      "tags": [
        "使用指南"
      ]
    },
    {
      "title": "布局与功能禁用",
      "url": "https://doublew2w.cn/demo/disable.html",
      "id": "https://doublew2w.cn/demo/disable.html",
      "summary": "你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。",
      "content_html": "<p>你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。</p>\n<!-- more -->\n<p>本页面就是一个示例，禁用了如下功能:</p>\n<ul>\n<li>导航栏</li>\n<li>侧边栏</li>\n<li>路径导航</li>\n<li>页面信息</li>\n<li>贡献者</li>\n<li>编辑此页链接</li>\n<li>更新时间</li>\n<li>上一篇/下一篇 链接</li>\n<li>评论</li>\n<li>页脚</li>\n<li>返回顶部按钮</li>\n</ul>\n",
      "date_published": "2024-06-27T17:51:53.000Z",
      "date_modified": "2024-06-27T17:51:53.000Z",
      "authors": [],
      "tags": [
        "使用指南"
      ]
    },
    {
      "title": "布局",
      "url": "https://doublew2w.cn/demo/layout.html",
      "id": "https://doublew2w.cn/demo/layout.html",
      "summary": "布局包括: 导航栏 侧边栏 页脚 同时每个页面包含: 路径导航 标题和页面信息 TOC (文章标题列表) 贡献者、更新时间等页面元信息 评论 主题也带有以下元素: 夜间模式按钮 返回顶部按钮 打印按钮 你可以在主题选项和页面的 frontmatter 中自定义它们。",
      "content_html": "<p>布局包括:</p>\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/layout/navbar.html\" target=\"_blank\" rel=\"noopener noreferrer\">导航栏</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/layout/sidebar.html\" target=\"_blank\" rel=\"noopener noreferrer\">侧边栏</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/layout/footer.html\" target=\"_blank\" rel=\"noopener noreferrer\">页脚</a></li>\n</ul>\n<p>同时每个页面包含:</p>\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/layout/breadcrumb.html\" target=\"_blank\" rel=\"noopener noreferrer\">路径导航</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/feature/page-info.html\" target=\"_blank\" rel=\"noopener noreferrer\">标题和页面信息</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/layout/page.html#%E6%A0%87%E9%A2%98%E5%88%97%E8%A1%A8\" target=\"_blank\" rel=\"noopener noreferrer\">TOC (文章标题列表)</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/guide/feature/meta.html\" target=\"_blank\" rel=\"noopener noreferrer\">贡献者、更新时间等页面元信息</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/feature/comment.html\" target=\"_blank\" rel=\"noopener noreferrer\">评论</a></li>\n</ul>\n<p>主题也带有以下元素:</p>\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/interface/darkmode.html\" target=\"_blank\" rel=\"noopener noreferrer\">夜间模式按钮</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/guide/interface/others.html#%E8%BF%94%E5%9B%9E%E9%A1%B6%E9%83%A8%E6%8C%89%E9%92%AE\" target=\"_blank\" rel=\"noopener noreferrer\">返回顶部按钮</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/guide/interface/others.html#%E6%89%93%E5%8D%B0%E6%8C%89%E9%92%AE\" target=\"_blank\" rel=\"noopener noreferrer\">打印按钮</a></li>\n</ul>\n<p>你可以在主题选项和页面的 frontmatter 中自定义它们。</p>\n",
      "date_published": "2024-06-27T17:51:53.000Z",
      "date_modified": "2024-06-27T17:51:53.000Z",
      "authors": [],
      "tags": [
        "指南"
      ]
    },
    {
      "title": "Markdown 展示",
      "url": "https://doublew2w.cn/demo/markdown.html",
      "id": "https://doublew2w.cn/demo/markdown.html",
      "summary": "VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。 你需要创建并编写 Markdown，以便 VuePress 可以根据文件结构将它们转换为不同的页面。",
      "content_html": "<p>VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。</p>\n<p>你需要创建并编写 Markdown，以便 VuePress 可以根据文件结构将它们转换为不同的页面。</p>\n<!-- more -->\n<h2>Markdown 介绍</h2>\n<p>如果你是一个新手，还不会编写 Markdown，请先阅读 <a href=\"https://theme-hope.vuejs.press/zh/cookbook/markdown/\" target=\"_blank\" rel=\"noopener noreferrer\">Markdown 介绍</a> 和 <a href=\"https://theme-hope.vuejs.press/zh/cookbook/markdown/demo.html\" target=\"_blank\" rel=\"noopener noreferrer\">Markdown 演示</a>。</p>\n<h2>Markdown 配置</h2>\n<p>VuePress 通过 Frontmatter 为每个 Markdown 页面引入配置。</p>\n<div class=\"hint-container important\">\n<p class=\"hint-container-title\">Frontmatter</p>\n<p>Frontmatter 是 VuePress 中很重要的一个概念，请阅读 <a href=\"https://theme-hope.vuejs.press/zh/cookbook/vuepress/page.html#front-matter\" target=\"_blank\" rel=\"noopener noreferrer\">Frontmatter 介绍</a> 了解详情。</p>\n</div>\n<h2>Markdown 扩展</h2>\n<p>VuePress 会使用 <a href=\"https://github.com/markdown-it/markdown-it\" target=\"_blank\" rel=\"noopener noreferrer\">markdown-it</a> 来解析 Markdown 内容，因此可以借助于 markdown-it 插件来实现 <a href=\"https://github.com/markdown-it/markdown-it#syntax-extensions\" target=\"_blank\" rel=\"noopener noreferrer\">语法扩展</a> 。</p>\n<h3>VuePress 扩展</h3>\n<p>为了丰富文档写作，VuePress 对 Markdown 语法进行了扩展。</p>\n<p>关于这些扩展，请阅读 <a href=\"https://theme-hope.vuejs.press/zh/cookbook/vuepress/markdown.html\" target=\"_blank\" rel=\"noopener noreferrer\">VuePress 中的 Markdown 扩展</a>。</p>\n<h3>主题扩展</h3>\n<p>通过 <a href=\"https://plugin-md-enhance.vuejs.press/zh/\" target=\"_blank\" rel=\"noopener noreferrer\"><code>vuepress-plugin-md-enhance</code></a>，主题扩展了更多 Markdown 语法，提供更加丰富的写作功能。</p>\n<h4>选项卡</h4>\n\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/markdown/content/tabs.html\" target=\"_blank\" rel=\"noopener noreferrer\">查看详情</a></li>\n</ul>\n<h4>脚注</h4>\n<p>此文字有脚注<sup class=\"footnote-ref\"><a href=\"#footnote1\">[1]</a><a class=\"footnote-anchor\" id=\"footnote-ref1\"></a></sup><a class=\"footnote-anchor\" id=\"footnote-ref1\">.</a></p><a class=\"footnote-anchor\" id=\"footnote-ref1\">\n</a><ul><a class=\"footnote-anchor\" id=\"footnote-ref1\">\n</a><li><a class=\"footnote-anchor\" id=\"footnote-ref1\"></a><a href=\"https://theme-hope.vuejs.press/zh/guide/markdown/content/footnote.html\" target=\"_blank\" rel=\"noopener noreferrer\">查看详情</a></li>\n</ul>\n<h4>导入文件</h4>\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/markdown/content/include.html\" target=\"_blank\" rel=\"noopener noreferrer\">查看详情</a></li>\n</ul>\n<h4>TeX 语法</h4>\n<p v-pre=\"\" class=\"katex-block\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><msup><mi mathvariant=\"normal\">∂</mi><mi>r</mi></msup><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>ω</mi><mi>r</mi></msup></mrow></mfrac><mrow><mo fence=\"true\">(</mo><mfrac><msup><mi>y</mi><mi>ω</mi></msup><mi>ω</mi></mfrac><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><mfrac><msup><mi>y</mi><mi>ω</mi></msup><mi>ω</mi></mfrac><mo fence=\"true\">)</mo></mrow><mrow><mo fence=\"true\">{</mo><mo stretchy=\"false\">(</mo><mi>log</mi><mo>⁡</mo><mi>y</mi><msup><mo stretchy=\"false\">)</mo><mi>r</mi></msup><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>r</mi></munderover><mfrac><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mi>i</mi></msup><mi>r</mi><mo>⋯</mo><mo stretchy=\"false\">(</mo><mi>r</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>log</mi><mo>⁡</mo><mi>y</mi><msup><mo stretchy=\"false\">)</mo><mrow><mi>r</mi><mo>−</mo><mi>i</mi></mrow></msup></mrow><msup><mi>ω</mi><mi>i</mi></msup></mfrac><mo fence=\"true\">}</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\n\\frac {\\partial^r} {\\partial \\omega^r} \\left(\\frac {y^{\\omega}} {\\omega}\\right)\n= \\left(\\frac {y^{\\omega}} {\\omega}\\right) \\left\\{(\\log y)^r + \\sum_{i=1}^r \\frac {(-1)^i r \\cdots (r-i+1) (\\log y)^{r-i}} {\\omega^i} \\right\\}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.4em;vertical-align:-0.95em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3414em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">ω</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0277em;vertical-align:-1.2777em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3414em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">ω</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mopen\">(</span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5017em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7507em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">}</span></span></span></span></span></span></span></p>\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/markdown/grammar/tex.html\" target=\"_blank\" rel=\"noopener noreferrer\">查看详情</a></li>\n</ul>\n<h4>任务列表</h4>\n<ul class=\"task-list-container\">\n<li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" id=\"task-item-0\" checked=\"checked\" disabled=\"disabled\"><label class=\"task-list-item-label\" for=\"task-item-0\"> 计划 1</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" id=\"task-item-1\" disabled=\"disabled\"><label class=\"task-list-item-label\" for=\"task-item-1\"> 计划 2</label></li>\n</ul>\n<p><a href=\"https://theme-hope.vuejs.press/zh/guide/markdown/grammar/tasklist.html\" target=\"_blank\" rel=\"noopener noreferrer\">查看详情</a></p>\n<h3>图片增强</h3>\n<p>支持为图片设置颜色模式和大小。</p>\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/markdown/grammar/image.html\" target=\"_blank\" rel=\"noopener noreferrer\">查看详情</a></li>\n</ul>\n<h4>上下角标</h4>\n<p>19<sup>th</sup> H<sub>2</sub>O</p>\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/markdown/grammar/sup-sub.html\" target=\"_blank\" rel=\"noopener noreferrer\">查看详情</a></li>\n</ul>\n<h4>组件</h4>\n",
      "date_published": "2024-06-27T17:51:53.000Z",
      "date_modified": "2024-06-27T17:51:53.000Z",
      "authors": [],
      "tags": [
        "使用指南"
      ]
    },
    {
      "title": "1-两数之和",
      "url": "https://doublew2w.cn/leetcode/1-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C.html",
      "id": "https://doublew2w.cn/leetcode/1-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C.html",
      "summary": "题目地址(1. 两数之和 - 力扣（LeetCode）) https://leetcode.cn/problems/two-sum/ 题目描述 给定一个整数数组 nums 和一个整数目标值 target ，请你在该数组中找出 和为目标值 target 的那 两个 整数，并返回它们的数组下标。 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在...",
      "content_html": "<h2>题目地址(1. 两数之和 - 力扣（LeetCode）)</h2>\n<p><a href=\"https://leetcode.cn/problems/two-sum/\" target=\"_blank\" rel=\"noopener noreferrer\">https://leetcode.cn/problems/two-sum/</a></p>\n<h2>题目描述</h2>\n<p> 给定一个整数数组 <code> nums </code>&nbsp; 和一个整数目标值 <code> target </code>，请你在该数组中找出 <strong> 和为目标值 </strong> <em> <code> target </code> </em>&nbsp; 的那&nbsp; <strong> 两个 </strong>&nbsp; 整数，并返回它们的数组下标。</p>\n<p> 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p>\n<p> 你可以按任意顺序返回答案。</p>\n<p>&nbsp; </p>\n<p> <strong class=\"example\"> 示例 1：</strong> </p>\n<pre> <strong> 输入：</strong> nums = [2,7,11,15], target = 9\n<strong> 输出：</strong> [0,1]\n<strong> 解释：</strong> 因为 nums [0] + nums [1] == 9 ，返回 [0, 1] 。\n</pre>\n<p> <strong class=\"example\"> 示例 2：</strong> </p>\n<pre> <strong> 输入：</strong> nums = [3,2,4], target = 6\n<strong> 输出：</strong> [1,2]\n</pre>\n<p> <strong class=\"example\"> 示例 3：</strong> </p>\n<pre> <strong> 输入：</strong> nums = [3,3], target = 6\n<strong> 输出：</strong> [0,1]\n</pre>\n<p>&nbsp; </p>\n<p> <strong> 提示：</strong> </p>\n<ul>\n\t<li> <code> 2 &lt;= nums.length &lt;= 10 <sup> 4 </sup> </code> </li>\n\t<li> <code>-10 <sup> 9 </sup> &lt;= nums [i] &lt;= 10 <sup> 9 </sup> </code> </li>\n\t<li> <code>-10 <sup> 9 </sup> &lt;= target &lt;= 10 <sup> 9 </sup> </code> </li>\n\t<li> <strong> 只会存在一个有效答案 </strong> </li>\n</ul>\n<p>&nbsp; </p>\n<p> <strong> 进阶：</strong> 你可以想出一个时间复杂度小于 <code> O(n <sup> 2 </sup>)</code> 的算法吗？</p>\n<h2>前置知识</h2>\n<ul>\n<li>哈希表</li>\n</ul>\n<h2>思路</h2>\n<p>创建一个哈希表，对于每个 <code>x</code>，通过查询 <code>target - x</code> 是否存在于哈希表中</p>\n<ul>\n<li>不存在，则将 <code>x</code> 插入哈希表</li>\n<li>存在，<code>x</code> 的下标与 <code>target-x</code> 的下标就是答案</li>\n</ul>\n<blockquote>\n<p>如果有 3 个或者以上的重复元素，代表这个重复元素不可能是解</p>\n<p>如果只有两个重复元素，同样的道理，假如这个重复元素是解，那么必定是两个重复元素的和等于 target。</p>\n</blockquote>\n<h2>关键点</h2>\n<ul>\n<li>每种输入只会对应一个答案</li>\n<li>哈希表存储的 key 是 <code>x</code> 和 <code>target - x</code></li>\n</ul>\n<h2>代码</h2>\n<ul>\n<li>语言支持：Java</li>\n</ul>\n<p>Java Code:</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes github-light one-dark-pro vp-code\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#E5C07B\"> Solution</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#61AFEF\">[] </span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">twoSum</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">nums</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> target</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">        Map</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&gt; </span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\">map</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> HashMap</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; i </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> nums</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">length</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> first</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">  target </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[i];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">map</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">containsKey</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(first)) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> firstIndex</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">  map</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(target </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> nums[i]);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                return</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">[]{firstIndex, i};</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">            map</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">put</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(nums[i], i);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>复杂度分析</strong></p>\n<p>令 n 为数组长度。</p>\n<ul>\n<li>时间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>空间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>，哈希表存储元素的开销</li>\n</ul>\n",
      "date_published": "2024-06-28T00:00:00.000Z",
      "date_modified": "2024-06-27T17:51:53.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "202-快乐数",
      "url": "https://doublew2w.cn/leetcode/202-%E5%BF%AB%E4%B9%90%E6%95%B0.html",
      "id": "https://doublew2w.cn/leetcode/202-%E5%BF%AB%E4%B9%90%E6%95%B0.html",
      "summary": "题目地址(202. 快乐数 - 力扣（LeetCode）) https://leetcode.cn/problems/happy-number/ 题目描述 编写一个算法来判断一个数 n 是不是快乐数。 「快乐数」 定义为： 对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和。 然后重复这个过程直到这个数变为 1，也可能是 无限循环 但始终变不...",
      "content_html": "<h2>题目地址(202. 快乐数 - 力扣（LeetCode）)</h2>\n<p><a href=\"https://leetcode.cn/problems/happy-number/\" target=\"_blank\" rel=\"noopener noreferrer\">https://leetcode.cn/problems/happy-number/</a></p>\n<h2>题目描述</h2>\n<p>编写一个算法来判断一个数 <code>n</code> 是不是快乐数。</p>\n<p><strong>「快乐数」</strong>&nbsp;定义为：</p>\n<ul>\n\t<li>对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和。</li>\n\t<li>然后重复这个过程直到这个数变为 1，也可能是 <strong>无限循环</strong> 但始终变不到 1。</li>\n\t<li>如果这个过程 <strong>结果为</strong>&nbsp;1，那么这个数就是快乐数。</li>\n</ul>\n<p>如果 <code>n</code> 是 <em>快乐数</em> 就返回 <code>true</code> ；不是，则返回 <code>false</code> 。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre><strong>输入：</strong>n = 19\n<strong>输出：</strong>true\n<strong>解释：\n</strong>1<sup>2</sup> + 9<sup>2</sup> = 82\n8<sup>2</sup> + 2<sup>2</sup> = 68\n6<sup>2</sup> + 8<sup>2</sup> = 100\n1<sup>2</sup> + 0<sup>2</sup> + 0<sup>2</sup> = 1\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre><strong>输入：</strong>n = 2\n<strong>输出：</strong>false\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n<h2>前置知识</h2>\n<ul>\n<li>哈希表</li>\n</ul>\n<h2>思路</h2>\n<p>通过反复调用 <code>getNext(n)</code> 得到的链是一个隐式的链表。链中的所有其他数字都是节点。那问题就直接转换为「检测一个链表是否有环。」</p>\n<p>定义两个指针slow和fast，slow在链表中前进 1 个节点，fast在链表前进 2 个节点（对 <code>getNext(n)</code> 函数的嵌套调用）。</p>\n<ul>\n<li>如果 <code>n</code> 是快乐数，则就说明没有循环，fast 会先到 “1”</li>\n<li>如果 <code>n</code> 不是快乐数，fast 和 slow 一定会在循环中。</li>\n</ul>\n<h2>关键点</h2>\n<ul>\n<li>将”快乐数“操作视为寻找下一个数，即看成一个链表</li>\n</ul>\n<h2>代码</h2>\n<ul>\n<li>语言支持：Java</li>\n</ul>\n<p>Java Code:</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes github-light one-dark-pro vp-code\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#E5C07B\"> Solution</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">    // 对于一个三位数来说，最大的平方和为 9^2+9^2+9^2 = 243</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">    // 对于一个四位数来说，最大的平方和为 81 + 81 + 81 + 81 = 324</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">    // 在继续往下后，4位数只会降到3位数，而不会无穷大</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> getNext</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> n</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> totalSum</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 计算每一位的平方和</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        while</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> d</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">%</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 10</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">/</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 10</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            totalSum </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">+=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> d </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">*</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> d;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> totalSum;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> boolean</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> isHappy</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> n</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> slowRunner</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> n;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> fastRunner</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> getNext</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(n);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(fastRunner </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            return</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 快慢指针，不是快乐数，那么存在一个环使得算法无限循环</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 在环中它们由于步速不一致，会相遇</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 如果相遇，则说明不是快乐数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 如果是快乐数，最后会返回1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        while</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (slowRunner </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> fastRunner) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">            // slow 走一步, fast 走两步</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            slowRunner </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> getNext</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(slowRunner);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            fastRunner </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> getNext</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(fastRunner);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            fastRunner </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> getNext</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(fastRunner);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> fastRunner </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>复杂度分析</strong></p>\n<ul>\n<li>\n<p>时间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></p>\n<ul>\n<li>如果没有循环，那么fast将先到达 1，slow将到达链表中的一半。成本是 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo>⋅</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(2⋅logn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>=<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(logn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>一旦两个指针都在循环中，假设循环中有 k 个数字。如果他们的起点是相隔 k−1 的位置（这是他们可以开始的最远的距离），那么快跑者需要 k−1 步才能到达慢跑者，主操作不变，所以也是 O(logn)。</li>\n</ul>\n</li>\n<li>\n<p>空间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></p>\n</li>\n</ul>\n",
      "date_published": "2024-06-28T00:00:00.000Z",
      "date_modified": "2024-06-27T17:51:53.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "142-环形链表 ii",
      "url": "https://doublew2w.cn/leetcode/142-linked-list-cycle-ii.html",
      "id": "https://doublew2w.cn/leetcode/142-linked-list-cycle-ii.html",
      "summary": "题目地址(142. 环形链表 II - 力扣（LeetCode）) https://leetcode.cn/problems/linked-list-cycle-ii/description/ 题目描述 给定一个链表的头节点 head ，返回链表开始入环的第一个节点。 如果链表无环，则返回 null 。 如果链表中有某个节点，可以通过连续跟踪 next...",
      "content_html": "<h2>题目地址(142. 环形链表 II - 力扣（LeetCode）)</h2>\n<p><a href=\"https://leetcode.cn/problems/linked-list-cycle-ii/description/\" target=\"_blank\" rel=\"noopener noreferrer\">https://leetcode.cn/problems/linked-list-cycle-ii/description/</a></p>\n<h2>题目描述</h2>\n<p> 给定一个链表的头节点 &nbsp; <code> head </code>&nbsp;，返回链表开始入环的第一个节点。&nbsp; <em> 如果链表无环，则返回&nbsp; <code> null </code>。</em> </p>\n<p> 如果链表中有某个节点，可以通过连续跟踪 <code> next </code> 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 <code> pos </code> 来表示链表尾连接到链表中的位置（<strong> 索引从 0 开始 </strong>）。如果 <code> pos </code> 是 <code>-1 </code>，则在该链表中没有环。<strong> 注意：<code> pos </code> 不作为参数进行传递 </strong>，仅仅是为了标识链表的实际情况。</p>\n<p> <strong> 不允许修改 </strong> 链表。</p>\n<ul>\n</ul>\n<p>&nbsp; </p>\n<p> <strong> 示例 1：</strong> </p>\n<p> <img src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist.png\"> </p>\n<pre> <strong> 输入：</strong> head = [3,2,0,-4], pos = 1\n<strong> 输出：</strong> 返回索引为 1 的链表节点\n<strong> 解释：</strong> 链表中有一个环，其尾部连接到第二个节点。\n</pre>\n<p> <strong> 示例&nbsp; 2：</strong> </p>\n<p> <img alt=\"\" src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/07/circularlinkedlist_test2.png\"> </p>\n<pre> <strong> 输入：</strong> head = [1,2], pos = 0\n<strong> 输出：</strong> 返回索引为 0 的链表节点\n<strong> 解释：</strong> 链表中有一个环，其尾部连接到第一个节点。\n</pre>\n<p> <strong> 示例 3：</strong> </p>\n<p> <img alt=\"\" src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/07/circularlinkedlist_test3.png\"> </p>\n<pre> <strong> 输入：</strong> head = [1], pos = -1\n<strong> 输出：</strong> 返回 null\n<strong> 解释：</strong> 链表中没有环。\n</pre>\n<p>&nbsp; </p>\n<p> <strong> 提示：</strong> </p>\n<ul>\n\t<li> 链表中节点的数目范围在范围 <code> [0, 10 <sup> 4 </sup>] </code> 内 </li>\n\t<li> <code>-10 <sup> 5 </sup> &lt;= Node.val &lt;= 10 <sup> 5 </sup> </code> </li>\n\t<li> <code> pos </code> 的值为 <code>-1 </code> 或者链表中的一个有效索引 </li>\n</ul>\n<p>&nbsp; </p>\n<p> <strong> 进阶：</strong> 你是否可以使用 <code> O(1)</code> 空间解决此题？</p>\n<h2>前置知识</h2>\n<ul>\n<li>链表</li>\n<li>环形证明</li>\n</ul>\n<h2>思路</h2>\n<p>使用双指针，分别定义为 fast 和 slow。从头节点出发，fast 每次走两步，slow 每次走 1 步。</p>\n<ul>\n<li>如果存在环，由于 fast 的步速大于 slow，最终 fast 和 slow 一定会在环中相遇</li>\n<li>如果不存在环，fast 会先于 slow 走到 null</li>\n</ul>\n<p>从头节点到环形入口节点的节点数为 x，环形入口节点到 fast 指针与 slow 指针相遇节点节点数为 y。从相遇节点 再到环形入口节点节点数为 z。</p>\n<p></p>\n<p>相遇时，slow 走过的节点数为 x+y，fast 走过的节点数为 x+y+n(y+z)，其中 n 为走过的环的圈数。</p>\n<p>fast 每次走两步，slow 每次走一步。</p>\n<ul>\n<li>x+y+n(y+z) = 2*(x+y) =&gt; x = (n-1)(y+z)+z</li>\n</ul>\n<p>从「相遇点到入环点的距离」加上「 n−1 圈的环长度」，恰好等于「从链表头部到入环点的距离」。</p>\n<h2>关键点</h2>\n<ul>\n<li>判断链表是否环</li>\n<li>如果有环，如何找到这个环的入口</li>\n</ul>\n<h2>代码</h2>\n<ul>\n<li>语言支持：Java</li>\n</ul>\n<p>Java Code:</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes github-light one-dark-pro vp-code\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">/**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> * Definition for singly-linked list.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> * class ListNode {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> *     int val;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> *     ListNode next;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> *     ListNode(int x) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> *         val = x;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> *         next = null;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> *     }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> * }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#E5C07B\"> Solution</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> ListNode</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> detectCycle</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">ListNode</span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> head</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(head </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> ||</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> head</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> ==</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            return</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 采用双指针的方式</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">        ListNode</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> fast</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> head,slow </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> head;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 第一次相遇, fast 走了 2n 个环， slow 走了 n 个环</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        while</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\">true</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(fast </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> ||</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> fast</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> ==</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">return</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            fast </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> fast</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            slow </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> slow</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(fast </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> slow) </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">break</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 让 fast 和 slow 一起同时 1，在次相遇就是环入口</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        fast </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> head;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        while</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(fast </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> slow){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            fast </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> fast</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            slow </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> slow</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> slow;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>复杂度分析</strong></p>\n<ul>\n<li>时间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>：第一次相遇时，slow 要走 x+y 步，第二次相遇，slow 要走 z 步，总体是线性复杂度</li>\n<li>空间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>：双指针使用常数大小的额外空间</li>\n</ul>\n",
      "date_published": "2024-06-27T00:00:00.000Z",
      "date_modified": "2024-06-27T17:51:53.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "19-删除链表的倒数第N个结点",
      "url": "https://doublew2w.cn/leetcode/19-remove-nth-node-from-end-of-list.html",
      "id": "https://doublew2w.cn/leetcode/19-remove-nth-node-from-end-of-list.html",
      "summary": "题目地址(19. 删除链表的倒数第 N 个结点 - 力扣（LeetCode）) https://leetcode.cn/problems/remove-nth-node-from-end-of-list/description/ 题目描述 给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。 示例 1： 示例 2： 示例 3： 提示： 链...",
      "content_html": "<h2>题目地址(19. 删除链表的倒数第 N 个结点 - 力扣（LeetCode）)</h2>\n<p><a href=\"https://leetcode.cn/problems/remove-nth-node-from-end-of-list/description/\" target=\"_blank\" rel=\"noopener noreferrer\">https://leetcode.cn/problems/remove-nth-node-from-end-of-list/description/</a></p>\n<h2>题目描述</h2>\n<p> 给你一个链表，删除链表的倒数第&nbsp; <code> n </code> <em>&nbsp; </em> 个结点，并且返回链表的头结点。</p>\n<p>&nbsp; </p>\n<p> <strong> 示例 1：</strong> </p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/03/remove_ex1.jpg\" style=\"width: 542px; height: 222px;\">\n<pre> <strong> 输入：</strong> head = [1,2,3,4,5], n = 2\n<strong> 输出：</strong> [1,2,3,5]\n</pre>\n<p> <strong> 示例 2：</strong> </p>\n<pre> <strong> 输入：</strong> head = [1], n = 1\n<strong> 输出：</strong> []\n</pre>\n<p> <strong> 示例 3：</strong> </p>\n<pre> <strong> 输入：</strong> head = [1,2], n = 1\n<strong> 输出：</strong> [1]\n</pre>\n<p>&nbsp; </p>\n<p> <strong> 提示：</strong> </p>\n<ul>\n\t<li> 链表中结点的数目为 <code> sz </code> </li>\n\t<li> <code> 1 &lt;= sz &lt;= 30 </code> </li>\n\t<li> <code> 0 &lt;= Node.val &lt;= 100 </code> </li>\n\t<li> <code> 1 &lt;= n &lt;= sz </code> </li>\n</ul>\n<p>&nbsp; </p>\n<p> <strong> 进阶：</strong> 你能尝试使用一趟扫描实现吗？</p>\n<h2>前置知识</h2>\n<ul>\n<li>链表</li>\n<li>双指针</li>\n</ul>\n<h2>思路 1：双指针</h2>\n<p><span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>u</mi><mi>m</mi><mi>m</mi><mi>y</mi><mi>H</mi><mi>e</mi><mi>a</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">dummyHead</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">mm</span><span class=\"mord mathnormal\">yHe</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span></span></span></span> 存储虚拟头节点，<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">first</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">rs</span><span class=\"mord mathnormal\">t</span></span></span></span> 存储头节点，<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>e</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">second</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">seco</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span></span></span></span> 存储虚拟头节点，进行遍历。</p>\n<ul>\n<li>让 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">first</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">rs</span><span class=\"mord mathnormal\">t</span></span></span></span> 先走 N 步。</li>\n<li><span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>e</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">second</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">seco</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span></span></span></span> 和 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">first</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">rs</span><span class=\"mord mathnormal\">t</span></span></span></span> 一起走。</li>\n<li>当 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">first</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">rs</span><span class=\"mord mathnormal\">t</span></span></span></span> 走到空节点时时，<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>e</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">second</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">seco</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span></span></span></span> 刚好走好倒数第 N+1 个</li>\n</ul>\n<p></p>\n<h2>关键点</h2>\n<ul>\n<li>由于要进行删除操作，因此要找到「倒数第 n+1」个节点位置</li>\n</ul>\n<h2>代码</h2>\n<ul>\n<li>语言支持：Java</li>\n</ul>\n<p>Java Code:</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes github-light one-dark-pro vp-code\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">/**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> * Definition for singly-linked list.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> * public class ListNode {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> * int val;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> * ListNode next;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> * ListNode() {}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> * ListNode(int val) { this.val = val; }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> * ListNode(int val, ListNode next) { this.val = val; this.next = next; }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> * }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#E5C07B\"> Solution</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> ListNode</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> removeNthFromEnd</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">ListNode</span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> head</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> n</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">head</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> ==</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> &amp;&amp;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> n </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            return</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 怎么知道是倒数第 2 个，使用双指针，让一个指针先走 2 步</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">        ListNode</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> dummyHead</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> ListNode</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">, head);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">        ListNode</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> first</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> head;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">        ListNode</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> second</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> dummyHead;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 让 first 先走 n，让 first 到达尾节点，second 刚好指向倒数第 n 个</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; i </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> n; i</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            first </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> first</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        while</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (first </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            first </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> first</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            second </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> second</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">        second</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> second</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> dummyHead</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>复杂度分析</strong></p>\n<p>令 n 为数组长度。</p>\n<ul>\n<li>时间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>空间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n",
      "date_published": "2024-06-27T00:00:00.000Z",
      "date_modified": "2024-06-27T17:51:53.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "24-两两交换链表中的节点",
      "url": "https://doublew2w.cn/leetcode/24-swap-nodes-in-pairs.html",
      "id": "https://doublew2w.cn/leetcode/24-swap-nodes-in-pairs.html",
      "summary": "题目地址(24. 两两交换链表中的节点 - 力扣（LeetCode）) https://leetcode.cn/problems/swap-nodes-in-pairs/description/ 题目描述 给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。 示例 1： 示...",
      "content_html": "<h2>题目地址(24. 两两交换链表中的节点 - 力扣（LeetCode）)</h2>\n<p><a href=\"https://leetcode.cn/problems/swap-nodes-in-pairs/description/\" target=\"_blank\" rel=\"noopener noreferrer\">https://leetcode.cn/problems/swap-nodes-in-pairs/description/</a></p>\n<h2>题目描述</h2>\n<p>给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/03/swap_ex1.jpg\" style=\"width: 422px; height: 222px;\">\n<pre><strong>输入：</strong>head = [1,2,3,4]\n<strong>输出：</strong>[2,1,4,3]\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre><strong>输入：</strong>head = []\n<strong>输出：</strong>[]\n</pre>\n<p><strong>示例 3：</strong></p>\n<pre><strong>输入：</strong>head = [1]\n<strong>输出：</strong>[1]\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li>链表中节点的数目在范围 <code>[0, 100]</code> 内</li>\n\t<li><code>0 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n<h2>前置知识</h2>\n<ul>\n<li>链表</li>\n</ul>\n<h2>思路1：虚拟头节点</h2>\n<p>使用变量 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>u</mi><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">cur</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span> 代表当前节点，初始化为 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>u</mi><mi>r</mi><mo>=</mo><mi>d</mi><mi>u</mi><mi>m</mi><mi>m</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">cur = dummy</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">mm</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span></p>\n<p>使用两个变量 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">first</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">rs</span><span class=\"mord mathnormal\">t</span></span></span></span> 和 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>e</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">second</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">seco</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span></span></span></span> 待交换的节点，即 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>c</mi><mi>u</mi><mi>r</mi><mi mathvariant=\"normal\">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">first = cur.next</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">rs</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span></span></span></span> 和 <span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>e</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>d</mi><mo>=</mo><mi>c</mi><mi>u</mi><mi>r</mi><mi mathvariant=\"normal\">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi mathvariant=\"normal\">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">second = cur.next.next</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">seco</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span></span></span></span></p>\n<p>当链表还剩下两个节点时，就可以进行更改链表节点的交换</p>\n<ul>\n<li>cur.next = secod</li>\n<li>first.next = second.next</li>\n<li>second.next = first</li>\n<li>cur = first</li>\n</ul>\n<p>进行下一轮的判断并且交换</p>\n<p></p>\n<h2>关键点</h2>\n<ol>\n<li>循环条件是当前链表还有2个以上的节点</li>\n<li>链表节点交换的指针变动</li>\n</ol>\n<h2>代码</h2>\n<ul>\n<li>语言支持：Java</li>\n</ul>\n<p>Java Code:</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes github-light one-dark-pro vp-code\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">/**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> * Definition for singly-linked list.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> * public class ListNode {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> *     int val;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> *     ListNode next;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> *     ListNode() {}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> *     ListNode(int val) { this.val = val; }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> * }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#E5C07B\"> Solution</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> ListNode</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> swapPairs</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">ListNode</span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> head</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (head </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> ||</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> head</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> ==</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            return</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> head;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">        ListNode</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> dummy</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> ListNode</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">// 设置一个虚拟头节点</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">        dummy</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> head; </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">// 将虚拟头结点指向head,这样方便后续做删除操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">        ListNode</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> cur</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> dummy;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        while</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">cur</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> !=</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> &amp;&amp;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> cur</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> !=</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">            ListNode</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> first</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> cur</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">            ListNode</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> second</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> cur</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">            cur</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> second; </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">// 步骤一</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">            first</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> second</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">// 步骤三</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">            second</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> first; </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">// 步骤二</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            cur </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> first;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> dummy</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>复杂度分析</strong></p>\n<p>令 n 为链表长度。</p>\n<ul>\n<li>时间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>空间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n",
      "date_published": "2024-06-27T00:00:00.000Z",
      "date_modified": "2024-06-27T17:51:53.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "242-有效的字母异位词",
      "url": "https://doublew2w.cn/leetcode/242-%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D.html",
      "id": "https://doublew2w.cn/leetcode/242-%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D.html",
      "summary": "题目地址(242. 有效的字母异位词 - 力扣（LeetCode）) https://leetcode.cn/problems/valid-anagram/description/ 题目描述 给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词。 注意： 若 s 和 t 中每个字符出现的次数都相同，则称 s 和 t 互为字母异...",
      "content_html": "<h2>题目地址(242. 有效的字母异位词 - 力扣（LeetCode）)</h2>\n<p><a href=\"https://leetcode.cn/problems/valid-anagram/description/\" target=\"_blank\" rel=\"noopener noreferrer\">https://leetcode.cn/problems/valid-anagram/description/</a></p>\n<h2>题目描述</h2>\n<p> 给定两个字符串 <code> <em> s </em> </code> 和 <code> <em> t </em> </code> ，编写一个函数来判断 <code> <em> t </em> </code> 是否是 <code> <em> s </em> </code> 的字母异位词。</p>\n<p> <strong> 注意：</strong> 若&nbsp; <code> <em> s </em> </code> 和 <code> <em> t </em> </code> <em>&nbsp; </em> 中每个字符出现的次数都相同，则称&nbsp; <code> <em> s </em> </code> 和 <code> <em> t </em> </code> <em>&nbsp; </em> 互为字母异位词。</p>\n<p>&nbsp; </p>\n<p> <strong> 示例&nbsp; 1: </strong> </p>\n<pre> <strong> 输入: </strong> <em> s </em> = \"anagram\", <em> t </em> = \"nagaram\"\n<strong> 输出: </strong> true\n</pre>\n<p> <strong> 示例 2: </strong> </p>\n<pre> <strong> 输入: </strong> <em> s </em> = \"rat\", <em> t </em> = \"car\"\n<strong> 输出: </strong> false </pre>\n<p>&nbsp; </p>\n<p> <strong> 提示: </strong> </p>\n<ul>\n\t<li> <code> 1 &lt;= s.length, t.length &lt;= 5 * 10 <sup> 4 </sup> </code> </li>\n\t<li> <code> s </code> 和 <code> t </code>&nbsp; 仅包含小写字母 </li>\n</ul>\n<p>&nbsp; </p>\n<p> <strong> 进阶:&nbsp; </strong> 如果输入字符串包含 unicode 字符怎么办？你能否调整你的解法来应对这种情况？</p>\n<h2>前置知识</h2>\n<ul>\n<li>哈希表</li>\n</ul>\n<h2>思路：哈希表记录</h2>\n<ul>\n<li>若 s、t 长度不相等，则「非字母异位词」</li>\n<li>若 s、t 某对应字母数量不同，则「非字母异位词」</li>\n</ul>\n<p>统计 s 各字符时执行 +1 ，统计 t 各字符时 −1 。若两字符串互为字母异位词，则最终哈希表中所有字符统计数值都应为 0 。</p>\n<h2>关键点</h2>\n<ul>\n<li>使用哈希表进行记录不同字母出现的次数</li>\n<li>也可以使用长度固定的数组记录不同字母出现的次数</li>\n</ul>\n<h2>代码</h2>\n<ul>\n<li>语言支持：Java</li>\n</ul>\n<p>Java Code:</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes github-light one-dark-pro vp-code\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#E5C07B\"> Solution</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> boolean</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\"> isAnagram</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> s</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> t</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 先判断长度一致</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">s</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">length</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">() </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> t</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">length</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">()) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            return</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> false</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">        // 使用字母的特性：只有 26 个，以一个数组来记录</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\">table</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\">26</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; i </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\"> s</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">length</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(); i</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            table[</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">s</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">charAt</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(i) </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#032F62;--shiki-dark:#98C379\"> 'a'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">]</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            table[</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E5C07B\">t</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\">charAt</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">(i) </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#032F62;--shiki-dark:#98C379\"> 'a'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">]</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; i </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 26</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">; i</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\"> (table[i] </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">                return</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> false</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>复杂度分析</strong></p>\n<p>令 n 为数组长度。</p>\n<ul>\n<li>时间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>空间复杂度：<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>，数组长度为常数，因此空间复杂度为常数</li>\n</ul>\n",
      "date_published": "2024-06-27T00:00:00.000Z",
      "date_modified": "2024-06-27T17:51:53.000Z",
      "authors": [],
      "tags": []
    }
  ]
}